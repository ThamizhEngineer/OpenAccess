CREATE OR REPLACE PACKAGE OPENACCESS.VIEW_REFRESH_HISTORY
AS
PROCEDURE COMP_SERV_REFRESH_HISTORY_ALL (service_number in varchar2 ,
                                            is_meter_change IN varchar2 default 'N',
                                            is_name_change IN varchar2 default 'N',
                                            is_utility_change IN varchar2 default 'N',
                                            is_flowtype_change IN varchar2 default 'N');
END VIEW_REFRESH_HISTORY;

CREATE OR REPLACE PACKAGE BODY OPENACCESS."VIEW_REFRESH_HISTORY"
AS procedure COMP_SERV_REFRESH_HISTORY_ALL (service_number in varchar2 ,
                                            is_meter_change IN varchar2 default 'N',
                                            is_name_change IN varchar2 default 'N',
                                            is_utility_change IN varchar2 default 'N',
                                            is_flowtype_change IN varchar2 default 'N')  is 
   
    MCCOUNT NUMBER := 0;
    MIGRATIONCOUNT NUMBER :=0;
    NAMECHANGECOUNT NUMBER :=0;
    UTILITYCOUNT NUMBER :=0;
    service_number_var varchar(12) := service_number;

	BEGIN
		IF service_number_var = NULL OR service_number_var = '' THEN 
		service_number_var := '%';
	    END IF;
	
	--------------------------meter change update-----------------------
	FOR I IN (SELECT rownum,vcs.ID ,vcs."number",vcs.M_COMPANY_NAME,vcs.M_ORG_NAME,vcs.FLOW_TYPE_CODE,
	 vcs.FUEL_TYPE_NAME,
     THMMC.OLDMETERNO,
     THMMC.NEWMETERNO,
     TO_CHAR(THMMC.MODIFIEDDATE,'MM') MC_MONTH,
     TO_CHAR(THMMC.MODIFIEDDATE,'YYYY')MC_YEAR
     FROM V_COMPANY_SERVICE vcs  LEFT JOIN TBL_HIS_MASTER_METER_CHANGEAMR thmmc ON thmmc.SERVICENO = vcs."number"
     WHERE vcs.COMP_SER_TYPE_CODE ='03' AND LENGTH ("number")=12 AND thmmc.SERVICENO IS NOT NULL
     AND THMMC .MODIFIEDDATE IS NOT NULL AND vcs."number" LIKE service_number_var)LOOP

     SELECT count(*) INTO MCCOUNT FROM TEMP_SERVICE_HISTORY WHERE M_COMP_SERV_NUMBER = I."number" 
     AND OLD_METER_NO =I.OLDMETERNO
     AND NEW_METER_NO =I.NEWMETERNO AND MC_MONTH =I.MC_MONTH AND MC_YEAR =I.MC_YEAR;
	
	IF MCCOUNT = 0 AND  is_meter_change = 'Y' THEN  
   INSERT INTO OPENACCESS.TEMP_SERVICE_HISTORY
(ID, M_COMPANY_ID, M_COMP_SERV_NUMBER, M_COMPANY_NAME, M_ORG_NAME, FLOW_TYPE_CODE, FUEL_TYPE_CODE, OLD_NAME,
NEW_NAME, NAME_CHANGE_MONTH, NAME_CHANGE_YEAR, MIGRATED_FROM, MIGRATED_TO, MIGRATION_MONTH, MIGRATION_YEAR, 
ADDED_BUYER_NAME, ADDED_BUYER_SERVICE_NO, ADDED_BUYER_M_COMPANY_ID, COMMERCIAL_MONTH, COMMERCIAL_YEAR, 
REMOVED_BUYER_NAME, REMOVED_BUYER_SERVICE_NO, REMOVED_BUYER_M_COMPANY_ID, OLD_METER_NO, NEW_METER_NO, 
MC_MONTH, MC_YEAR)
VALUES(TEMP_SERVICE_HISTORY_ID.nextval,I.ID,I."number", I.M_COMPANY_NAME,I.M_ORG_NAME,I.FLOW_TYPE_CODE,
I.FUEL_TYPE_NAME,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
NULL,NULL,NULL,NULL,NULL,NULL,I.OLDMETERNO,I.NEWMETERNO,I.MC_MONTH,I.MC_YEAR);
END IF;
END LOOP;
----------------------------------------------migration update------------------------------------------
FOR J IN (SELECT rownum,vcs.ID ,vcs."number",vcs.M_COMPANY_NAME,vcs.M_ORG_NAME,vcs.FLOW_TYPE_CODE,
	 vcs.FUEL_TYPE_NAME,
     smh.MG_FROM,
     smh.MG_TO, 
     smh.MG_MONTH, 
     smh.MG_YEAR  FROM V_COMPANY_SERVICE vcs 
     LEFT JOIN SERVICE_MIGRATION_HIS smh ON SMH.M_COMP_SERVICE_NO  =VCS."number" 
     WHERE vcs.COMP_SER_TYPE_CODE ='03' AND LENGTH ("number")=12 AND vcs."number" LIKE service_number_var)LOOP

     SELECT count(*) INTO MIGRATIONCOUNT FROM TEMP_SERVICE_HISTORY WHERE M_COMP_SERV_NUMBER = J."number" AND 
     MIGRATED_FROM =J.MG_FROM AND MIGRATED_TO  =J.MG_TO AND MIGRATION_MONTH  =J.MG_MONTH AND 
     MIGRATION_YEAR =J.MG_YEAR;
	
	IF MIGRATIONCOUNT = 0 AND is_flowtype_change='Y' THEN  
   INSERT INTO OPENACCESS.TEMP_SERVICE_HISTORY
(ID, M_COMPANY_ID, M_COMP_SERV_NUMBER, M_COMPANY_NAME, M_ORG_NAME, FLOW_TYPE_CODE, FUEL_TYPE_CODE, OLD_NAME,
NEW_NAME, NAME_CHANGE_MONTH, NAME_CHANGE_YEAR, MIGRATED_FROM, MIGRATED_TO, MIGRATION_MONTH, MIGRATION_YEAR, 
ADDED_BUYER_NAME, ADDED_BUYER_SERVICE_NO, ADDED_BUYER_M_COMPANY_ID, COMMERCIAL_MONTH, COMMERCIAL_YEAR, 
REMOVED_BUYER_NAME, REMOVED_BUYER_SERVICE_NO, REMOVED_BUYER_M_COMPANY_ID, OLD_METER_NO, NEW_METER_NO, 
MC_MONTH, MC_YEAR)
VALUES(TEMP_SERVICE_HISTORY_ID.nextval,J.ID,J."number", J.M_COMPANY_NAME,J.M_ORG_NAME,J.FLOW_TYPE_CODE,
J.FUEL_TYPE_NAME,NULL,NULL,NULL,NULL,J.MG_FROM,J.MG_TO,J.MG_MONTH,J.MG_YEAR,NULL,NULL,
NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
END IF;
END LOOP;
-----------------------------------------------name change---------------------------------------------------
FOR K IN (SELECT rownum,vcs.ID ,vcs."number",vcs.M_COMPANY_NAME,vcs.M_ORG_NAME,vcs.FLOW_TYPE_CODE,
	 vcs.FUEL_TYPE_NAME,
     nch.OLD_NAME ,
     nch.NEW_NAME ,
     nch.NC_MONTH ,
     nch.NC_YEAR FROM V_COMPANY_SERVICE vcs 
     LEFT JOIN  NAME_CHANGE_HIS nch  ON nch.M_COMP_SERVICE_NO  =VCS."number" 
     WHERE vcs.COMP_SER_TYPE_CODE ='03' AND LENGTH ("number")=12 AND vcs."number" LIKE service_number_var)LOOP

     SELECT count(*) INTO NAMECHANGECOUNT FROM TEMP_SERVICE_HISTORY WHERE M_COMP_SERV_NUMBER = K."number" AND 
     NEW_NAME = K.NEW_NAME  AND OLD_NAME =K.OLD_NAME AND NAME_CHANGE_MONTH =K.NC_MONTH AND 
     NAME_CHANGE_YEAR =K.NC_YEAR;
	
	IF NAMECHANGECOUNT = 0 AND is_name_change ='Y' THEN  
   INSERT INTO OPENACCESS.TEMP_SERVICE_HISTORY
(ID, M_COMPANY_ID, M_COMP_SERV_NUMBER, M_COMPANY_NAME, M_ORG_NAME, FLOW_TYPE_CODE, FUEL_TYPE_CODE, OLD_NAME,
NEW_NAME, NAME_CHANGE_MONTH, NAME_CHANGE_YEAR, MIGRATED_FROM, MIGRATED_TO, MIGRATION_MONTH, MIGRATION_YEAR, 
ADDED_BUYER_NAME, ADDED_BUYER_SERVICE_NO, ADDED_BUYER_M_COMPANY_ID, COMMERCIAL_MONTH, COMMERCIAL_YEAR, 
REMOVED_BUYER_NAME, REMOVED_BUYER_SERVICE_NO, REMOVED_BUYER_M_COMPANY_ID, OLD_METER_NO, NEW_METER_NO, 
MC_MONTH, MC_YEAR)
VALUES(TEMP_SERVICE_HISTORY_ID.nextval,K.ID,K."number", K.M_COMPANY_NAME,K.M_ORG_NAME,K.FLOW_TYPE_CODE,
K.FUEL_TYPE_NAME,K.OLD_NAME,K.NEW_NAME,K.NC_MONTH,K.NC_YEAR,NULL,NULL,NULL,NULL,NULL,NULL,
NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
END IF;
END LOOP;
-------------------------------------------------UTILITY CHANGE---------------------------------------------
FOR L IN (SELECT rownum,vcs.ID ,vcs."number",vcs.M_COMPANY_NAME,vcs.M_ORG_NAME,vcs.FLOW_TYPE_CODE,
	 vcs.FUEL_TYPE_NAME,
     mth.ADDED_BUYER_COM_SERV_NUMBER ,
     MTH.ADDED_BUYER_NAME ,
     MTH.ADDED_BUYER_SERV_NO ,
     MTH.TRD_MONTH ,
     MTH.TRD_YEAR ,
     MTH.DELETED_BUYER_COMP_SERV_NUMBER ,
     MTH.DELETED_BUYER_SERV_NO ,
     MTH.DELETED_BUYER_NAME 
     FROM V_COMPANY_SERVICE vcs 
     LEFT JOIN  M_TRADE_HIS mth  ON mth.M_COMP_SERVICE_NO  =vcs."number" 
     WHERE vcs.COMP_SER_TYPE_CODE ='03' AND LENGTH ("number")=12 AND vcs."number" LIKE service_number_var)LOOP

     SELECT count(*) INTO UTILITYCOUNT FROM TEMP_SERVICE_HISTORY WHERE M_COMP_SERV_NUMBER = L."number" AND 
     ADDED_BUYER_SERVICE_NO =L.ADDED_BUYER_COM_SERV_NUMBER OR
     REMOVED_BUYER_SERVICE_NO =L.DELETED_BUYER_COMP_SERV_NUMBER AND COMMERCIAL_MONTH  =L.TRD_MONTH AND 
     COMMERCIAL_YEAR  =L.TRD_YEAR;
	
	IF UTILITYCOUNT = 0 AND is_utility_change = 'Y' THEN  
   INSERT INTO OPENACCESS.TEMP_SERVICE_HISTORY
(ID, M_COMPANY_ID, M_COMP_SERV_NUMBER, M_COMPANY_NAME, M_ORG_NAME, FLOW_TYPE_CODE, FUEL_TYPE_CODE, OLD_NAME,
NEW_NAME, NAME_CHANGE_MONTH, NAME_CHANGE_YEAR, MIGRATED_FROM, MIGRATED_TO, MIGRATION_MONTH, MIGRATION_YEAR, 
ADDED_BUYER_NAME, ADDED_BUYER_SERVICE_NO, ADDED_BUYER_M_COMPANY_ID, COMMERCIAL_MONTH, COMMERCIAL_YEAR, 
REMOVED_BUYER_NAME, REMOVED_BUYER_SERVICE_NO, REMOVED_BUYER_M_COMPANY_ID, OLD_METER_NO, NEW_METER_NO, 
MC_MONTH, MC_YEAR)
VALUES(TEMP_SERVICE_HISTORY_ID.nextval,L.ID,L."number", L.M_COMPANY_NAME,L.M_ORG_NAME,L.FLOW_TYPE_CODE,
L.FUEL_TYPE_NAME,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,L.ADDED_BUYER_NAME,L.ADDED_BUYER_COM_SERV_NUMBER,
L.ADDED_BUYER_SERV_NO,L.TRD_MONTH,L.TRD_YEAR,L.DELETED_BUYER_NAME,L.DELETED_BUYER_COMP_SERV_NUMBER,
L.DELETED_BUYER_SERV_NO,NULL,NULL,NULL,NULL);
END IF;
END LOOP;
-------------------------------------------------------------------------------------------------------------




	END COMP_SERV_REFRESH_HISTORY_ALL;
END VIEW_REFRESH_HISTORY;
