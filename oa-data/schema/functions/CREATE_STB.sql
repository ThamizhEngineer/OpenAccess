CREATE OR REPLACE FUNCTION OPENACCESS."CREATE_STB" 
(V_GS_ID VARCHAR2) RETURN VARCHAR2
AS
    V_TR M_TRADE_RELATIONSHIP%ROWTYPE;
    V_GS T_GEN_STMT%ROWTYPE;
    V_ES_USAGESUMMARY T_ES_USAGE_SUMMARY%ROWTYPE;
    V_ES T_ENERGY_SALE%ROWTYPE;
    V_ES_VALUES T_ENERGY_SALE%ROWTYPE;
    V_RESULT VARCHAR(300):='SUCCESS';
    V_EXCEPTION_CODE VARCHAR2(150);
    V_EXCEPTION_MSG  VARCHAR2(150);
    V_ES_ID VARCHAR2(150);
    V_TR_ID VARCHAR2(150);
    V_ES_US_TOTAL VARCHAR2(150);
    V_DATE DATE;
    V_RES M_TRADE_RELATIONSHIP%ROWTYPE;
    V_BUYER_ORGID VARCHAR2(150);
    TR VARCHAR2(150);
    V_COMP_SERV VARCHAR2(150);
    V_SELLER_ORGID VARCHAR2(150);
    V_BUYER_SERVICE_ID VARCHAR2(150);
    V_IS_ES_EXIST_COUNT VARCHAR2(150);
    V_REASON VARCHAR2(200);
    V_TRADE_REL_COUNT VARCHAR2(150);
    V_ES_CONFIRMATION_RESULT VARCHAR2(100);
    V_STB_PMT NUMBER;
    V_GC_CHARGE_CURSOR sys_refcursor ;
    V_ES_CHARGE_CURSOR sys_refcursor ;
    CHARGE_CODE VARCHAR2(200);
    TOTAL_CHARGE VARCHAR2(200);
    V_ES_CHARGE T_ES_CHARGE%ROWTYPE;
    V_TOTAL_AMT_CHARGABLE NUMBER;
    v_log_result varchar(300):='SUCCESS';
BEGIN
   BEGIN
         v_log_result := log_activity('PROCEDURE','CREATE_STB','Start',v_result,v_reason,'', sysdate,V_GS_ID, '', '');

     SELECT TO_DATE(CONCAT(STMT_YEAR,(CONCAT(CONCAT('-',STMT_MONTH),'-01'))),'YYYY-MM-DD'),M_COMPANY_SERVICE_ID,M_ORG_ID  INTO V_DATE,V_COMP_SERV,V_SELLER_ORGID
     FROM T_GEN_STMT WHERE ID=V_GS_ID;
         v_log_result := log_activity('PROCEDURE','CREATE_STB','Start','1',v_reason,'', sysdate,V_GS_ID, '', '');
     V_BUYER_SERVICE_ID := CONCAT('TNEB-',V_SELLER_ORGID);
      v_log_result := log_activity('PROCEDURE','CREATE_STB','Start','2',v_reason,'', sysdate,V_GS_ID, '', '');
     SELECT COUNT(*) INTO V_TRADE_REL_COUNT FROM M_TRADE_RELATIONSHIP TRADE WHERE M_SELLER_COMP_SERVICE_ID = V_COMP_SERV AND M_BUYER_COMP_SERVICE_ID = V_BUYER_SERVICE_ID AND V_DATE BETWEEN TRADE.FROM_DATE AND TRADE.TO_DATE;
--        -- dbms_output.put_line('V_TRADE_REL_COUNT'||V_TRADE_REL_COUNT);
 v_log_result := log_activity('PROCEDURE','CREATE_STB','Start','V_TRADE_REL_COUNT',V_TRADE_REL_COUNT,'', sysdate,V_GS_ID, '', '');
       IF V_TRADE_REL_COUNT=1 THEN
        SELECT * INTO V_RES FROM M_TRADE_RELATIONSHIP TRADE WHERE M_SELLER_COMP_SERVICE_ID = V_COMP_SERV AND M_BUYER_COMP_SERVICE_ID = V_BUYER_SERVICE_ID AND V_DATE BETWEEN TRADE.FROM_DATE AND TRADE.TO_DATE;
        SELECT COUNT(*) INTO V_IS_ES_EXIST_COUNT FROM T_ENERGY_SALE WHERE T_GEN_STMT_ID=V_GS_ID AND IS_STB='Y';
--          -- dbms_output.put_line('V_IS_ES_EXIST_COUNT'||V_IS_ES_EXIST_COUNT);
 v_log_result := log_activity('PROCEDURE','CREATE_STB','Start','V_IS_ES_EXIST_COUNT',V_IS_ES_EXIST_COUNT,'', sysdate,V_GS_ID, '', '');
         IF V_IS_ES_EXIST_COUNT = 0 THEN
                SELECT V_RES.C1,V_RES.C2,V_RES.C3,V_RES.C4,V_RES.C5,V_RES.M_SELLER_COMP_SERVICE_ID,V_RES.FROM_DATE,V_RES.TO_DATE
                INTO V_ES.C1,V_ES.C2,V_ES.C3,V_ES.C4,V_ES.C5,V_ES.SELLER_COMP_SERV_ID,V_ES.FROM_DT,V_ES.TO_DT
                FROM M_TRADE_RELATIONSHIP WHERE ID =V_RES.ID;
                SELECT * INTO V_GS FROM T_GEN_STMT WHERE ID = V_GS_ID;
                SELECT V_GS.M_ORG_ID,V_GS.INJECTING_VOLTAGE_CODE,V_GS.STMT_MONTH,V_GS.STMT_YEAR,V_GS.ID
                INTO   V_ES.SELLER_END_ORG_ID,V_ES.INJECTING_VOLTAGE_CODE,V_ES.MONTH,V_ES.YEAR,V_ES.T_GEN_STMT_ID
                FROM DUAL;
                V_ES.ID := T_ENERGY_SALE_SEQ.NEXTVAL||'ES';
                --SET VALUES IN ENERGY-SALE
                V_ES.MULTIPLE_BUYERS :='N';
                V_ES.USAGE_DETAIL_AVAIL :='N';
                V_ES.SIMPLE_ENERGY_SALE :='N';
                V_ES.IS_STB :='Y';
                V_ES.STATUS_CODE :='CREATED';

                IF TO_NUMBER(V_GS.C1)  > TO_NUMBER(V_RES.C1)  THEN
                V_ES.C1 := V_RES.C1;
                ELSE
                V_ES.C1 := V_GS.C1;
                END IF;

                IF TO_NUMBER(V_GS.C2)  > TO_NUMBER(V_RES.C2)   THEN
                V_ES.C2 := V_RES.C2;
                ELSE
                V_ES.C2 := V_GS.C2;
                END IF;

                IF TO_NUMBER(V_GS.C3)  > TO_NUMBER(V_RES.C3)   THEN
                V_ES.C3:=V_RES.C3;
                ELSE
                V_ES.C3:=V_GS.C3;
                END IF;


                IF TO_NUMBER(V_GS.C4)  > TO_NUMBER(V_RES.C4)   THEN
                V_ES.C4 := V_RES.C4;
                ELSE
                V_ES.C4 := V_GS.C4;
                END IF;

                IF TO_NUMBER(V_GS.C5)  > TO_NUMBER(V_RES.C5)   THEN
                V_ES.C5 := V_RES.C5;
                ELSE
                V_ES.C5 := V_GS.C5;
                END IF;

                INSERT INTO T_ENERGY_SALE VALUES V_ES;

                SELECT CONCAT('TNEB-',SELLER_END_ORG_ID) INTO V_BUYER_ORGID
                FROM T_ENERGY_SALE  WHERE T_GEN_STMT_ID=V_GS_ID;

                SELECT * INTO V_ES_VALUES FROM T_ENERGY_SALE WHERE T_GEN_STMT_ID = V_GS_ID;
                V_TOTAL_AMT_CHARGABLE:=0;
                INSERT INTO t_es_charge (ID, T_ENERGY_SALE_ID,M_COMP_SERV_ID,CHARGE_CODE,TOTAL_CHARGE  )
                (SELECT T_ES_CHARGE_SEQ.NEXTVAL||'ESC' ID, V_ES.ID T_ENERGY_SALE_ID, V_ES.SELLER_COMP_SERV_ID M_COMP_SERV_ID, CHARGE_CODE,NVL(TOTAL_CHARGES,0) FROM T_GEN_STMT_CHARGE  WHERE T_GEN_STMT_ID = V_GS_ID);

                SELECT SUM(TOTAL_CHARGE) INTO V_TOTAL_AMT_CHARGABLE FROM t_es_charge WHERE M_COMP_SERV_ID = V_ES.SELLER_COMP_SERV_ID;
                V_ES_US_TOTAL := V_ES_VALUES.C1 +V_ES_VALUES.C2+V_ES_VALUES.C3+V_ES_VALUES.C4+V_ES_VALUES.C5;
                SELECT V_ES_VALUES.C1,V_ES_VALUES.C2,V_ES_VALUES.C3,V_ES_VALUES.C4,V_ES_VALUES.C5,V_BUYER_ORGID,V_ES_VALUES.SELLER_END_ORG_ID,V_ES_VALUES.ID,V_ES_US_TOTAL
                INTO V_ES_USAGESUMMARY.C1,V_ES_USAGESUMMARY.C2,V_ES_USAGESUMMARY.C3,V_ES_USAGESUMMARY.C4,V_ES_USAGESUMMARY.C5,V_ES_USAGESUMMARY.BUYER_COMP_SERV_ID,V_ES_USAGESUMMARY.BUYER_END_ORG_ID,V_ES_USAGESUMMARY.T_ENERGY_SALE_ID,V_ES_USAGESUMMARY.TOTAL
                FROM DUAL;

                V_STB_PMT :=STB_PMT_CALC(V_GS_ID);
                V_ES_USAGESUMMARY.UNIT_COST :=V_STB_PMT ;
                V_ES_USAGESUMMARY.TOTAL_AMOUNT_PAYABLE:=V_STB_PMT*V_ES_US_TOTAL;
                V_ES_USAGESUMMARY.TOTAL_AMOUNT_CHARGABLE:=V_TOTAL_AMT_CHARGABLE;
               V_ES_USAGESUMMARY.NET_AMOUNT_PAYABLE:=V_ES_USAGESUMMARY.TOTAL_AMOUNT_PAYABLE - V_TOTAL_AMT_CHARGABLE;
                V_ES_USAGESUMMARY.ID := T_ES_USAGE_SUMMARY_SEQ.NEXTVAL||'ESU';
                V_ES_USAGESUMMARY.M_TRADE_RELATIONSHIP_ID:=V_RES.id;

                INSERT INTO T_ES_USAGE_SUMMARY VALUES V_ES_USAGESUMMARY;
                --V_RESULT := CREATE_STB(V_ES.ID);

                V_GS.STATUS_CODE:='PART_ALLOC';

                UPDATE T_GEN_STMT SET STATUS_CODE=V_GS.STATUS_CODE  WHERE ID = V_GS_ID;
                V_ES_CONFIRMATION_RESULT :=ENERGY_SALE_CONFIRMATION(V_ES.ID);
        ELSE
        V_REASON    := 'STB ENERGY SALE ALREADY EXIST';
        V_RESULT    := 'FAILURE';
        GOTO THE_END;
        END IF;
    ELSE
    V_REASON    := 'NO ACTION';
    V_RESULT    := 'FAILURE';
    GOTO THE_END;
    END IF;
      EXCEPTION
              WHEN OTHERS THEN
                V_EXCEPTION_CODE := SQLCODE;
                V_EXCEPTION_MSG  := SUBSTR(SQLERRM, 1, 100);
                V_RESULT := 'FAILURE' || ' - ' || V_EXCEPTION_CODE || ' - ' || V_EXCEPTION_MSG;
--                -- dbms_output.put_line('ISSUE IN CREATE_STB-'||V_RESULT);
 v_log_result := log_activity('PROCEDURE','CREATE_STB','EXCEPTION',V_RESULT,V_EXCEPTION_MSG,'', sysdate,'');
 END;
 <<THE_END>>
IF V_RESULT = 'SUCCESS' THEN
  COMMIT;
ELSE
  v_result := v_result || ' - ' || v_reason;
END IF;
RETURN V_RESULT;
END CREATE_STB;

