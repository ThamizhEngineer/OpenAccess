CREATE OR REPLACE FUNCTION OPENACCESS."SURPLUS_ENERGY_LOSS_CALC" 
(INJECTION_CODE IN VARCHAR2,
DRAWAL_CODE IN  VARCHAR2,
DRAWAL_UNITS IN VARCHAR2,

TRANS_LOSS OUT NUMBER,DIST_LOSS OUT NUMBER,
TOTAL_LOSS OUT NUMBER,INJECTED_UNITS OUT NUMBER)
RETURN VARCHAR2
IS
    V_LOSS_CALCULATION M_LOSS_CALC_CHART%ROWTYPE;
    V_REASON VARCHAR2(200);
    V_RESULT VARCHAR(300):='SUCCESS';
    V_EXCEPTION_CODE VARCHAR2(150);
    V_EXCEPTION_MSG  VARCHAR2(150);
INJECTED_UNITS_LOSS VARCHAR2(150);
GROSSED_UP_UNITS VARCHAR2(150);
BEGIN
   BEGIN

SELECT * INTO V_LOSS_CALCULATION FROM M_LOSS_CALC_CHART WHERE INJECTION_VOLTAGE_CODE=INJECTION_CODE AND DRAWAL_VOLTAGE_CODE=DRAWAL_CODE ;

--        TRANS_LOSS := V_LOSS_CALCULATION.TRANS_LOSS_PERCENT*DRAWAL_UNITS;
--        TRANS_LOSS :=TO_BINARY_FLOAT(TRANS_LOSS)/100;

--        DIST_LOSS := V_LOSS_CALCULATION.DIST_LOSS_PERCENT*DRAWAL_UNITS;
--        DIST_LOSS :=TO_BINARY_FLOAT(DIST_LOSS)/100;


        TOTAL_LOSS :=V_LOSS_CALCULATION.TRANS_LOSS_PERCENT+V_LOSS_CALCULATION.DIST_LOSS_PERCENT;
        GROSSED_UP_UNITS := DRAWAL_UNITS / ((100 - TOTAL_LOSS)/100);

        INJECTED_UNITS := GROSSED_UP_UNITS - (GROSSED_UP_UNITS * (14/100));

      EXCEPTION
              WHEN OTHERS THEN
                V_EXCEPTION_CODE := SQLCODE;
                V_EXCEPTION_MSG  := SUBSTR(SQLERRM, 1, 100);
                V_RESULT := 'FAILURE' || ' - ' || V_EXCEPTION_CODE || ' - ' || V_EXCEPTION_MSG;
 END;
 <<THE_END>>
IF V_RESULT = 'SUCCESS' THEN
  COMMIT;
ELSE
  v_result := v_result || ' - ' || v_reason;
END IF;
RETURN TOTAL_LOSS;
END ;

