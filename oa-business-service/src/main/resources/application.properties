#---------------------------env specific configuration below-----------------------
secure.service=true
# secure.service=false
service.hostname=localhost
db.hostname=10.251.45.82
db.port=1521
db.serviceName=HTOA
db.username=openaccess
db.password=openaccess



#--------------------------Open Access Database Connection Details---------------------
appdb.jdbc.driverClassName=oracle.jdbc.pool.OracleDataSource
appdb.jdbc.url=jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=${db.hostname})(PORT=${db.port}))(CONNECT_DATA=(SERVICE_NAME=${db.serviceName})))
appdb.jdbc.username=${db.username}
appdb.jdbc.password=${db.password}


#---------------------------project specific configuration below-----------------------
#Auth Service - connection details
authservice.endpoint.baseurl=http://${service.hostname}:4212/oa-auth-service/
authservice.endpoint.username=user-1
authservice.endpoint.password=toughCall
docservice.endpoint.baseurl=http://${service.hostname}:4216/oa-document-service/
integrationservice.endpoint.baseurl=http://${service.hostname}:4208/oa-integration-service/_internal
integrationservice.endpoint.baseurl1=http://${service.hostname}:4208/oa-integration-service/
print.url=${docservice.endpoint.baseurl}/doc-print/_internal
printapi.url=${docservice.endpoint.baseurl}/api/doc-print/_internal
printcharge.url=${docservice.endpoint.baseurl}/doc-print/_internal
printapicharge.url=${docservice.endpoint.baseurl}/api/doc-print/_internal
printsolarfeederlineloss.url=${docservice.endpoint.baseurl}/api/doc-print/_internal

db.batchinsert.size=1000

docs.folder.delimitter=/

#---------------------------spring configuration below-----------------------

spring.datasource.driverClassName=oracle.jdbc.driver.OracleDriver
spring.datasource.url= jdbc:oracle:thin:@//${db.hostname}:${db.port}/${db.serviceName}
spring.datasource.username=${db.username}
spring.datasource.password=${db.password}
spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.ddl-auto=none
cacheprepstmts:false
cache-prep-stmts:false

#spring.datasource.hikari.connectionTimeout=30000
#spring.datasource.hikari.idleTimeout=600000
#spring.datasource.hikari.maxLifetime=1800000
#spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.leakDetectionThreshold=2000


spring.mail.host=192.168.150.1
spring.mail.port=25
spring.mail.username=oadonotreply@tnebnet.org
#spring.mail.password=tneb@123.
spring.mail.properties.mail.auth=true
spring.mail.properties.mail.starttls.enable=true


#spring.application.name=oa-service
#eureka.instance.preferIpAddress=true
#eureka.client.registerWithEureka=true
#eureka.client.fetchRegistry=true
#eureka.client.serviceUrl.defaultZone=${EUREKA_URI:http://localhost:8761/eureka}
#spring.data.rest.basePath=/repo/
#spring.data.rest.defaultMediaType=application/json

#server port
server.port=4206
server.servlet.contextPath=/oa-service
#in spring-boot greater than 2.0, we might have to use server.servlet.context-path

#logging location
logging.path=/opt/oa/log/oa-service/

#enable remote shutdown
management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true

#enable http trace to view previous requests
management.endpoint.httptrace.enabled=true

# Enable logging to verify that HikariCP is used, the second entry is specific to HikariCP
logging.level.org.hibernate.SQL=DEBUG
logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE 
