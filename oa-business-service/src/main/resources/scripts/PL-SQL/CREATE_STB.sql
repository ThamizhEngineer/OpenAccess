--------------------------------------------------------
--  File created - Monday-April-09-2018   
--------------------------------------------------------
DROP FUNCTION "OPENACCESS"."CREATE_STB";
DROP FUNCTION "OPENACCESS"."ENERGY_SALE_CONFIRMATION";
DROP FUNCTION "OPENACCESS"."STB_PMT_CALC";
--------------------------------------------------------
--  DDL for Table M_TRADE_RELATIONSHIP
--------------------------------------------------------

  CREATE TABLE "OPENACCESS"."M_TRADE_RELATIONSHIP" 
   (	"ID" VARCHAR2(50 BYTE), 
	"QUANTUM" VARCHAR2(50 BYTE), 
	"FROM_DATE" DATE, 
	"TO_DATE" DATE, 
	"STATUS_CODE" VARCHAR2(50 BYTE), 
	"M_SELLER_COMPANY_ID" VARCHAR2(50 BYTE), 
	"M_SELLER_COMP_SERVICE_ID" VARCHAR2(50 BYTE), 
	"M_BUYER_COMPANY_ID" VARCHAR2(50 BYTE), 
	"M_BUYER_COMP_SERVICE_ID" VARCHAR2(50 BYTE), 
	"REFERENCENUMBER" VARCHAR2(200 BYTE), 
	"REMARKS" VARCHAR2(300 BYTE), 
	"CREATED_BY" VARCHAR2(50 BYTE), 
	"CREATED_DATE" DATE DEFAULT sysdate, 
	"MODIFIED_BY" VARCHAR2(50 BYTE), 
	"MODIFIED_DATE" DATE, 
	"C1" VARCHAR2(50 BYTE), 
	"C2" VARCHAR2(50 BYTE), 
	"C3" VARCHAR2(50 BYTE), 
	"C4" VARCHAR2(50 BYTE), 
	"C5" VARCHAR2(50 BYTE), 
	"IS_CAPTIVE" CHAR(1 BYTE), 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y', 
	"PEAK_UNITS" VARCHAR2(100 BYTE), 
	"OFF_PEAK_UNITS" VARCHAR2(100 BYTE), 
	"INTERVAL_TYPE_CODE" VARCHAR2(50 BYTE), 
	"SHARE_PERCENT" VARCHAR2(100 BYTE), 
	"TRADE_RELATIONSHIP_SOURCE_CODE" VARCHAR2(50 BYTE) DEFAULT 'OAA'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_ENERGY_SALE
--------------------------------------------------------

  CREATE TABLE "OPENACCESS"."T_ENERGY_SALE" 
   (	"ID" VARCHAR2(50 BYTE), 
	"T_GEN_STMT_ID" VARCHAR2(50 BYTE), 
	"SELLER_COMP_SERV_ID" VARCHAR2(50 BYTE), 
	"SELLER_END_ORG_ID" VARCHAR2(50 BYTE), 
	"MONTH" VARCHAR2(50 BYTE), 
	"YEAR" VARCHAR2(50 BYTE), 
	"INJECTING_VOLTAGE_CODE" VARCHAR2(50 BYTE), 
	"FROM_DT" DATE, 
	"TO_DT" DATE, 
	"LOSS" VARCHAR2(50 BYTE), 
	"MULTIPLE_BUYERS" CHAR(1 BYTE), 
	"USAGE_DETAIL_AVAIL" CHAR(1 BYTE), 
	"SIMPLE_ENERGY_SALE" CHAR(1 BYTE), 
	"C1" VARCHAR2(50 BYTE), 
	"C2" VARCHAR2(50 BYTE), 
	"C3" VARCHAR2(50 BYTE), 
	"C4" VARCHAR2(50 BYTE), 
	"C5" VARCHAR2(50 BYTE), 
	"NET_GENERATION" VARCHAR2(50 BYTE), 
	"NET_ALLOCATION" VARCHAR2(50 BYTE), 
	"STATUS_CODE" VARCHAR2(100 BYTE), 
	"TOTAL_BANK_UNITS_USED" VARCHAR2(100 BYTE), 
	"BC1" VARCHAR2(100 BYTE), 
	"BC2" VARCHAR2(100 BYTE), 
	"BC3" VARCHAR2(100 BYTE), 
	"BC4" VARCHAR2(100 BYTE), 
	"BC5" VARCHAR2(100 BYTE), 
	"GC1" VARCHAR2(50 BYTE), 
	"GC2" VARCHAR2(50 BYTE), 
	"GC3" VARCHAR2(50 BYTE), 
	"GC4" VARCHAR2(50 BYTE), 
	"GC5" VARCHAR2(50 BYTE), 
	"IS_STB" CHAR(1 BYTE), 
	"AVAIL_C1" VARCHAR2(100 BYTE), 
	"AVAIL_C2" VARCHAR2(100 BYTE), 
	"AVAIL_C3" VARCHAR2(100 BYTE), 
	"AVAIL_C4" VARCHAR2(100 BYTE), 
	"AVAIL_C5" VARCHAR2(100 BYTE), 
	"AVAIL_GC1" VARCHAR2(100 BYTE), 
	"AVAIL_GC2" VARCHAR2(100 BYTE), 
	"AVAIL_GC3" VARCHAR2(100 BYTE), 
	"AVAIL_GC4" VARCHAR2(100 BYTE), 
	"AVAIL_GC5" VARCHAR2(100 BYTE), 
	"AVAIL_BC1" VARCHAR2(100 BYTE), 
	"AVAIL_BC2" VARCHAR2(100 BYTE), 
	"AVAIL_BC3" VARCHAR2(100 BYTE), 
	"AVAIL_BC4" VARCHAR2(100 BYTE), 
	"AVAIL_BC5" VARCHAR2(100 BYTE), 
	"CREATED_BY" VARCHAR2(100 BYTE), 
	"CREATED_DATE" DATE DEFAULT sysdate, 
	"M_SUBSTATION_ID" VARCHAR2(100 BYTE), 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y', 
	"NET_CHARGES_ALLOCATED" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_ES_CHARGE
--------------------------------------------------------

  CREATE TABLE "OPENACCESS"."T_ES_CHARGE" 
   (	"ID" VARCHAR2(50 BYTE), 
	"T_ENERGY_SALE_ID" VARCHAR2(50 BYTE), 
	"M_COMP_SERV_ID" VARCHAR2(50 BYTE), 
	"CHARGE_CODE" VARCHAR2(50 BYTE), 
	"TOTAL_CHARGE" VARCHAR2(50 BYTE), 
	"CREATED_BY" VARCHAR2(100 BYTE), 
	"CREATED_DATE" DATE DEFAULT sysdate, 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_ES_USAGE_SUMMARY
--------------------------------------------------------

  CREATE TABLE "OPENACCESS"."T_ES_USAGE_SUMMARY" 
   (	"ID" VARCHAR2(50 BYTE), 
	"T_ENERGY_SALE_ID" VARCHAR2(50 BYTE), 
	"BUYER_END_ORG_ID" VARCHAR2(50 BYTE), 
	"BUYER_END_SS_ID" VARCHAR2(50 BYTE), 
	"C1" VARCHAR2(50 BYTE), 
	"C2" VARCHAR2(50 BYTE), 
	"C3" VARCHAR2(50 BYTE), 
	"C4" VARCHAR2(50 BYTE), 
	"C5" VARCHAR2(50 BYTE), 
	"TOTAL" VARCHAR2(50 BYTE), 
	"BUYER_COMP_SERV_ID" VARCHAR2(50 BYTE), 
	"M_TRADE_RELATIONSHIP_ID" VARCHAR2(50 BYTE), 
	"CREATED_DATE" DATE DEFAULT sysdate, 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y', 
	"REMARKS" VARCHAR2(100 BYTE), 
	"UNIT_COST" VARCHAR2(100 BYTE), 
	"TOTAL_AMOUNT_PAYABLE" VARCHAR2(100 BYTE), 
	"TOTAL_AMOUNT_CHARGABLE" VARCHAR2(100 BYTE), 
	"NET_AMOUNT_PAYABLE" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_GEN_STMT
--------------------------------------------------------

  CREATE TABLE "OPENACCESS"."T_GEN_STMT" 
   (	"ID" VARCHAR2(50 BYTE), 
	"STATUS_CODE" VARCHAR2(50 BYTE), 
	"REMARKS" VARCHAR2(500 BYTE), 
	"M_COMPANY_METER_ID" VARCHAR2(50 BYTE), 
	"REF_NUMBER" VARCHAR2(100 BYTE), 
	"T_MR_IDS" VARCHAR2(100 BYTE), 
	"MF" VARCHAR2(50 BYTE), 
	"MACHINE_CAPACITY" VARCHAR2(50 BYTE), 
	"STMT_GEN_DATE" DATE, 
	"STMT_MONTH" VARCHAR2(50 BYTE), 
	"STMT_YEAR" VARCHAR2(50 BYTE), 
	"INIT_STMT_DT" DATE, 
	"FINAL_STMT_DT" DATE, 
	"RKVAH_INIT" VARCHAR2(50 BYTE), 
	"RKVAH_FINAL" VARCHAR2(50 BYTE), 
	"RKVAH_DIFF" VARCHAR2(50 BYTE), 
	"RKVAH_UNITS" VARCHAR2(50 BYTE), 
	"KVAH_INIT" VARCHAR2(50 BYTE), 
	"KVAH_FINAL" VARCHAR2(50 BYTE), 
	"KVAH_DIFF" VARCHAR2(50 BYTE), 
	"KVAH_UNITS" VARCHAR2(50 BYTE), 
	"TOTAL_IMPORT_GEN" VARCHAR2(50 BYTE), 
	"TOTAL_EXPORT_GEN" VARCHAR2(50 BYTE), 
	"M_ORG_ID" VARCHAR2(50 BYTE), 
	"M_COMPANY_ID" VARCHAR2(50 BYTE), 
	"M_COMPANY_SERVICE_ID" VARCHAR2(50 BYTE), 
	"DISP_COMPANY_NAME" VARCHAR2(100 BYTE), 
	"DISP_SERVICE_NUMBER" VARCHAR2(50 BYTE), 
	"INJECTING_VOLTAGE_CODE" VARCHAR2(50 BYTE), 
	"DISP_ORG_NAME" VARCHAR2(100 BYTE), 
	"POWER_FACTOR" VARCHAR2(50 BYTE), 
	"NET_GENERATION" VARCHAR2(50 BYTE), 
	"TOTAL_CHARGED_AMOUNT" VARCHAR2(50 BYTE), 
	"C1" VARCHAR2(50 BYTE), 
	"C2" VARCHAR2(50 BYTE), 
	"C3" VARCHAR2(50 BYTE), 
	"C4" VARCHAR2(50 BYTE), 
	"C5" VARCHAR2(50 BYTE), 
	"CREATED_BY" VARCHAR2(100 BYTE), 
	"CREATED_DT" DATE, 
	"MODIFIED_BY" VARCHAR2(100 BYTE), 
	"MODIFIED_DT" DATE, 
	"PENALTY_RATE" VARCHAR2(100 BYTE), 
	"COMMISSION_DATE" DATE, 
	"CREATED_DATE" DATE DEFAULT sysdate, 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y', 
	"FILE_NAME" VARCHAR2(50 BYTE), 
	"DISP_FUEL_TYPE_CODE" VARCHAR2(100 BYTE), 
	"DISP_FUEL_TYPE_NAME" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_GEN_STMT_CHARGE
--------------------------------------------------------

  CREATE TABLE "OPENACCESS"."T_GEN_STMT_CHARGE" 
   (	"ID" VARCHAR2(50 BYTE), 
	"REMARKS" VARCHAR2(100 BYTE), 
	"T_GEN_STMT_ID" VARCHAR2(50 BYTE), 
	"CHARGE_CODE" VARCHAR2(50 BYTE), 
	"CHARGE_DESC" VARCHAR2(100 BYTE), 
	"CHARGE_TYPE_CODE" VARCHAR2(50 BYTE), 
	"UNIT_CHARGE" VARCHAR2(50 BYTE), 
	"TOTAL_CHARGES" VARCHAR2(50 BYTE), 
	"CREATED_DATE" DATE DEFAULT sysdate, 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Sequence T_ENERGY_SALE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "OPENACCESS"."T_ENERGY_SALE_SEQ"  MINVALUE 1 MAXVALUE 99999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence T_ES_CHARGE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "OPENACCESS"."T_ES_CHARGE_SEQ"  MINVALUE 1 MAXVALUE 99999999999 INCREMENT BY 1 START WITH 130 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence T_ES_USAGE_SUMMARY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "OPENACCESS"."T_ES_USAGE_SUMMARY_SEQ"  MINVALUE 1 MAXVALUE 99999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Function CREATE_STB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "OPENACCESS"."CREATE_STB" 
(V_GS_ID VARCHAR2) RETURN VARCHAR2 
AS 
    V_TR M_TRADE_RELATIONSHIP%ROWTYPE;
    V_GS T_GEN_STMT%ROWTYPE;
    V_ES_USAGESUMMARY T_ES_USAGE_SUMMARY%ROWTYPE;
    V_ES T_ENERGY_SALE%ROWTYPE;
    V_ES_VALUES T_ENERGY_SALE%ROWTYPE;
    V_RESULT VARCHAR(300):='SUCCESS'; 
    V_EXCEPTION_CODE VARCHAR2(150);
    V_EXCEPTION_MSG  VARCHAR2(150);
    V_ES_ID VARCHAR2(150);
    V_TR_ID VARCHAR2(150);
    V_ES_US_TOTAL VARCHAR2(150);
    V_DATE DATE;
    V_RES M_TRADE_RELATIONSHIP%ROWTYPE;
    V_BUYER_ORGID VARCHAR2(150);
    TR VARCHAR2(150);
    V_COMP_SERV VARCHAR2(150);
    V_SELLER_ORGID VARCHAR2(150);
    V_BUYER_SERVICE_ID VARCHAR2(150);
    V_IS_ES_EXIST_COUNT VARCHAR2(150);
    V_REASON VARCHAR2(200); 
    V_TRADE_REL_COUNT VARCHAR2(150);
    V_ES_CONFIRMATION_RESULT VARCHAR2(100);
    V_STB_PMT NUMBER;
    V_GC_CHARGE_CURSOR sys_refcursor ;
    V_ES_CHARGE_CURSOR sys_refcursor ;
    CHARGE_CODE VARCHAR2(200); 
    TOTAL_CHARGE VARCHAR2(200); 
    V_ES_CHARGE T_ES_CHARGE%ROWTYPE;
    V_TOTAL_AMT_CHARGABLE NUMBER;
BEGIN  
   BEGIN
     SELECT TO_DATE(CONCAT(STMT_YEAR,(CONCAT(CONCAT('-',STMT_MONTH),'-01'))),'YYYY-MM-DD'),M_COMPANY_SERVICE_ID,M_ORG_ID  INTO V_DATE,V_COMP_SERV,V_SELLER_ORGID
     FROM T_GEN_STMT WHERE ID=V_GS_ID;     
     V_BUYER_SERVICE_ID := CONCAT('TNEB-',V_SELLER_ORGID);      
     SELECT COUNT(*) INTO V_TRADE_REL_COUNT FROM M_TRADE_RELATIONSHIP TRADE WHERE M_SELLER_COMP_SERVICE_ID = V_COMP_SERV AND M_BUYER_COMP_SERVICE_ID = V_BUYER_SERVICE_ID AND V_DATE BETWEEN TRADE.FROM_DATE AND TRADE.TO_DATE;
        DBMS_OUTPUT.PUT_LINE('V_TRADE_REL_COUNT'||V_TRADE_REL_COUNT);
       IF V_TRADE_REL_COUNT=1 THEN
        SELECT * INTO V_RES FROM M_TRADE_RELATIONSHIP TRADE WHERE M_SELLER_COMP_SERVICE_ID = V_COMP_SERV AND M_BUYER_COMP_SERVICE_ID = V_BUYER_SERVICE_ID AND V_DATE BETWEEN TRADE.FROM_DATE AND TRADE.TO_DATE;
        SELECT COUNT(*) INTO V_IS_ES_EXIST_COUNT FROM T_ENERGY_SALE WHERE T_GEN_STMT_ID=V_GS_ID AND IS_STB='Y';      
          DBMS_OUTPUT.PUT_LINE('V_IS_ES_EXIST_COUNT'||V_IS_ES_EXIST_COUNT);
         IF V_IS_ES_EXIST_COUNT = 0 THEN                    
                SELECT V_RES.C1,V_RES.C2,V_RES.C3,V_RES.C4,V_RES.C5,V_RES.M_SELLER_COMP_SERVICE_ID,V_RES.FROM_DATE,V_RES.TO_DATE
                INTO V_ES.C1,V_ES.C2,V_ES.C3,V_ES.C4,V_ES.C5,V_ES.SELLER_COMP_SERV_ID,V_ES.FROM_DT,V_ES.TO_DT
                FROM M_TRADE_RELATIONSHIP WHERE ID =V_RES.ID;
                SELECT * INTO V_GS FROM T_GEN_STMT WHERE ID = V_GS_ID;            
                SELECT V_GS.M_ORG_ID,V_GS.INJECTING_VOLTAGE_CODE,V_GS.STMT_MONTH,V_GS.STMT_YEAR,V_GS.ID
                INTO   V_ES.SELLER_END_ORG_ID,V_ES.INJECTING_VOLTAGE_CODE,V_ES.MONTH,V_ES.YEAR,V_ES.T_GEN_STMT_ID
                FROM DUAL;
                V_ES.ID := T_ENERGY_SALE_SEQ.NEXTVAL;            
                --SET VALUES IN ENERGY-SALE
                V_ES.MULTIPLE_BUYERS :='N';
                V_ES.USAGE_DETAIL_AVAIL :='N';
                V_ES.SIMPLE_ENERGY_SALE :='N';
                V_ES.IS_STB :='Y';
                V_ES.STATUS_CODE :='CREATED';              

                IF TO_NUMBER(V_GS.C1)  > TO_NUMBER(V_RES.C1)  THEN
                V_ES.C1 := V_RES.C1;
                ELSE
                V_ES.C1 := V_GS.C1;
                END IF;

                IF TO_NUMBER(V_GS.C2)  > TO_NUMBER(V_RES.C2)   THEN
                V_ES.C2 := V_RES.C2;
                ELSE
                V_ES.C2 := V_GS.C2;
                END IF;

                IF TO_NUMBER(V_GS.C3)  > TO_NUMBER(V_RES.C3)   THEN          
                V_ES.C3:=V_RES.C3;     
                ELSE             
                V_ES.C3:=V_GS.C3;        
                END IF;


                IF TO_NUMBER(V_GS.C4)  > TO_NUMBER(V_RES.C4)   THEN
                V_ES.C4 := V_RES.C4;
                ELSE
                V_ES.C4 := V_GS.C4;
                END IF;

                IF TO_NUMBER(V_GS.C5)  > TO_NUMBER(V_RES.C5)   THEN
                V_ES.C5 := V_RES.C5;
                ELSE
                V_ES.C5 := V_GS.C5;
                END IF;

                INSERT INTO OPENACCESS.T_ENERGY_SALE VALUES V_ES;             

                SELECT CONCAT('TNEB-',SELLER_END_ORG_ID) INTO V_BUYER_ORGID
                FROM T_ENERGY_SALE  WHERE T_GEN_STMT_ID=V_GS_ID;                 

                SELECT * INTO V_ES_VALUES FROM T_ENERGY_SALE WHERE T_GEN_STMT_ID = V_GS_ID;
                V_TOTAL_AMT_CHARGABLE:=0;
                INSERT INTO t_es_charge (ID, T_ENERGY_SALE_ID,M_COMP_SERV_ID,CHARGE_CODE,TOTAL_CHARGE  )
                (SELECT T_ES_CHARGE_SEQ.NEXTVAL ID, V_ES.ID T_ENERGY_SALE_ID, V_ES.SELLER_COMP_SERV_ID M_COMP_SERV_ID, CHARGE_CODE,NVL(TOTAL_CHARGES,0) FROM T_GEN_STMT_CHARGE  WHERE T_GEN_STMT_ID = V_GS_ID);

                SELECT SUM(TOTAL_CHARGE) INTO V_TOTAL_AMT_CHARGABLE FROM t_es_charge WHERE M_COMP_SERV_ID = V_ES.SELLER_COMP_SERV_ID; 
                V_ES_US_TOTAL := V_ES_VALUES.C1 +V_ES_VALUES.C2+V_ES_VALUES.C3+V_ES_VALUES.C4+V_ES_VALUES.C5;
                SELECT V_ES_VALUES.C1,V_ES_VALUES.C2,V_ES_VALUES.C3,V_ES_VALUES.C4,V_ES_VALUES.C5,V_BUYER_ORGID,V_ES_VALUES.SELLER_END_ORG_ID,V_ES_VALUES.ID,V_ES_US_TOTAL
                INTO V_ES_USAGESUMMARY.C1,V_ES_USAGESUMMARY.C2,V_ES_USAGESUMMARY.C3,V_ES_USAGESUMMARY.C4,V_ES_USAGESUMMARY.C5,V_ES_USAGESUMMARY.BUYER_COMP_SERV_ID,V_ES_USAGESUMMARY.BUYER_END_ORG_ID,V_ES_USAGESUMMARY.T_ENERGY_SALE_ID,V_ES_USAGESUMMARY.TOTAL
                FROM DUAL;

                V_STB_PMT :=STB_PMT_CALC(V_GS_ID);
                V_ES_USAGESUMMARY.UNIT_COST :=V_STB_PMT ;
                V_ES_USAGESUMMARY.TOTAL_AMOUNT_PAYABLE:=V_STB_PMT*V_ES_US_TOTAL;
                V_ES_USAGESUMMARY.TOTAL_AMOUNT_CHARGABLE:=V_TOTAL_AMT_CHARGABLE;
               V_ES_USAGESUMMARY.NET_AMOUNT_PAYABLE:=V_ES_USAGESUMMARY.TOTAL_AMOUNT_PAYABLE - V_TOTAL_AMT_CHARGABLE;
                V_ES_USAGESUMMARY.ID := T_ES_USAGE_SUMMARY_SEQ.NEXTVAL;
                V_ES_USAGESUMMARY.M_TRADE_RELATIONSHIP_ID:=V_RES.id;

                INSERT INTO T_ES_USAGE_SUMMARY VALUES V_ES_USAGESUMMARY;
                --V_RESULT := CREATE_STB(V_ES.ID);

                V_GS.STATUS_CODE:='PART_ALLOC';

                UPDATE T_GEN_STMT SET STATUS_CODE=V_GS.STATUS_CODE  WHERE ID = V_GS_ID;
                V_ES_CONFIRMATION_RESULT :=ENERGY_SALE_CONFIRMATION(V_ES.ID);
        ELSE
        V_REASON    := 'STB ENERGY SALE ALREADY EXIST';
        V_RESULT    := 'FAILURE';
        GOTO THE_END;
        END IF;    
    ELSE 
    V_REASON    := 'NO ACTION';
    V_RESULT    := 'FAILURE';
    GOTO THE_END; 
    END IF;
      EXCEPTION
              WHEN OTHERS THEN
                V_EXCEPTION_CODE := SQLCODE;
                V_EXCEPTION_MSG  := SUBSTR(SQLERRM, 1, 100);
                V_RESULT := 'FAILURE' || ' - ' || V_EXCEPTION_CODE || ' - ' || V_EXCEPTION_MSG;
                DBMS_OUTPUT.PUT_LINE('ISSUE IN CREATE_STB-'||V_RESULT);

 END;
 <<THE_END>>
IF V_RESULT = 'SUCCESS' THEN
  COMMIT;
ELSE
  v_result := v_result || ' - ' || v_reason;
END IF;
RETURN V_RESULT;
END CREATE_STB;

/
--------------------------------------------------------
--  DDL for Function ENERGY_SALE_CONFIRMATION
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "OPENACCESS"."ENERGY_SALE_CONFIRMATION" 
(V_ES_ID VARCHAR2) RETURN VARCHAR2 
AS   
    V_SELLER_COMP_SERVICE V_COMPANY_SERVICE%ROWTYPE;
    V_BUYER_COMP_SERVICE V_COMPANY_SERVICE%ROWTYPE;
    V_ES T_ENERGY_SALE%ROWTYPE;
    V_ES_USAGESUMMARY T_ES_USAGE_SUMMARY%ROWTYPE;
    V_GS T_GEN_STMT%ROWTYPE;
    V_ES_ORDER F_ENERGY_SALE_ORDER%ROWTYPE;
    V_ES_ORDERLINE F_ENERGY_SALE_ORDER_LINES%ROWTYPE;
    V_ES_ORDERLINE_LEDGER F_ENERGY_SALE_ORDER_LINES%ROWTYPE;
    V_ENERGY_CHARGE F_ENERGY_CHARGES%ROWTYPE;
    V_GEN_STMT_ENERGY_CHARGE F_ENERGY_CHARGES%ROWTYPE;
    V_ES_CHARGE T_ES_CHARGE%ROWTYPE;
    V_GS_CHARGE T_GEN_STMT_CHARGE%ROWTYPE;
    V_RESULT VARCHAR(300):='SUCCESS';
    V_REASON VARCHAR2(200); 
    V_EXCEPTION_CODE VARCHAR2(150);
    V_EXCEPTION_MSG  VARCHAR2(150);
    V_ES_USAGESUMMARY_CURSOR sys_refcursor ;
    V_ES_ORDERLINE_CURSOR sys_refcursor ;
    V_GC_CHARGE_CURSOR sys_refcursor ;
    V_ES_CHARGE_CURSOR sys_refcursor ;
    CHARGE_COMP_SERVICE_ID VARCHAR2(200); 
    CHARGE_CODE VARCHAR2(200); 
    CHARGE_DESC VARCHAR2(200); 
    TOTAL_CHARGE VARCHAR2(200); 
    V_ENERGY_LEDGER F_ENERGY_LEDGER%ROWTYPE;
    V_ENERGY_LEDGER_BANK F_ENERGY_LEDGER%ROWTYPE;
    V_ENERGY_LEDGER_BUYER F_ENERGY_LEDGER%ROWTYPE;
    V_ENERGY_LEDGER_SELLER_TL F_ENERGY_LEDGER%ROWTYPE;
    V_ENERGY_LEDGER_SELLER_DL F_ENERGY_LEDGER%ROWTYPE;
    V_LOSS_CAL_BUYER_TRANS VARCHAR2(200);
    V_LOSS_CAL_BUYER_DIST VARCHAR2(200);
    V_LOSS_CAL_BUYER_TOTAL VARCHAR2(200); 
    V_LOSS_CAL_BUYER_DRAWAL1 VARCHAR2(200); 
    V_LOSS_CAL_BUYER_DRAWAL2 VARCHAR2(200); 
    V_LOSS_CAL_BUYER_DRAWAL3 VARCHAR2(200); 
    V_LOSS_CAL_BUYER_DRAWAL4 VARCHAR2(200); 
    V_LOSS_CAL_BUYER_DRAWAL5 VARCHAR2(200); 
    V_LOSS_CAL_BUYER_DRAWALOUT VARCHAR2(200); 

    V_LOSS_CAL_SELLER_TL_TOTAL VARCHAR2(200); 
    V_LOSS_CAL_SELLER_TL_DRAWAL VARCHAR2(200); 
    V_LOSS_CAL_SELLER_TL_DIST VARCHAR2(200);
    V_LOSS_CAL_SELLER_TL_TRANS1 VARCHAR2(200);   
    V_LOSS_CAL_SELLER_TL_TRANS2 VARCHAR2(200); 
    V_LOSS_CAL_SELLER_TL_TRANS3 VARCHAR2(200); 
    V_LOSS_CAL_SELLER_TL_TRANS4 VARCHAR2(200); 
    V_LOSS_CAL_SELLER_TL_TRANS5 VARCHAR2(200); 
    V_LOSS_CAL_SELLER_TL_TRANSOUT VARCHAR2(200); 

    V_LOSS_CAL_SELLER_DL_TOTAL VARCHAR2(200); 
    V_LOSS_CAL_SELLER_DL_DRAWAL VARCHAR2(200); 
    V_LOSS_CAL_SELLER_DL_TRANS VARCHAR2(200);
    V_LOSS_CAL_SELLER_DL_DIST1 VARCHAR2(200);
    V_LOSS_CAL_SELLER_DL_DIST2 VARCHAR2(200); 
    V_LOSS_CAL_SELLER_DL_DIST3 VARCHAR2(200); 
    V_LOSS_CAL_SELLER_DL_DIST4 VARCHAR2(200); 
    V_LOSS_CAL_SELLER_DL_DIST5 VARCHAR2(200); 
    V_LOSS_CAL_SELLER_DL_DISTOUT VARCHAR2(200); 




BEGIN  
   BEGIN
     SELECT * INTO V_ES FROM T_ENERGY_SALE WHERE ID = V_ES_ID;
       DBMS_OUTPUT.PUT_LINE(V_ES.STATUS_CODE);

       IF V_ES.STATUS_CODE='CREATED' AND V_ES.STATUS_CODE!='APPROVED' THEN
         SELECT * INTO V_SELLER_COMP_SERVICE FROM V_COMPANY_SERVICE WHERE ID=V_ES.SELLER_COMP_SERV_ID;


         SELECT V_ES.ID,V_ES.SELLER_COMP_SERV_ID,V_ES.SELLER_END_ORG_ID,V_ES.MONTH,V_ES.YEAR,V_ES.INJECTING_VOLTAGE_CODE,V_ES.FROM_DT,V_ES.TO_DT,V_ES.LOSS,
         V_ES.MULTIPLE_BUYERS,V_ES.USAGE_DETAIL_AVAIL,V_ES.SIMPLE_ENERGY_SALE,V_ES.C1,V_ES.C2,V_ES.C3,V_ES.C4,V_ES.C5,V_ES.NET_GENERATION,V_ES.BC1,V_ES.BC2,V_ES.BC3,V_ES.BC4,V_ES.BC5,V_ES.TOTAL_BANK_UNITS_USED,V_ES.NET_ALLOCATION,
         V_SELLER_COMP_SERVICE.M_COMPANY_NAME,V_SELLER_COMP_SERVICE.M_COMPANY_CODE,V_SELLER_COMP_SERVICE."number",V_SELLER_COMP_SERVICE.M_ORG_NAME,V_SELLER_COMP_SERVICE.M_ORG_CODE,V_ES.GC1,V_ES.GC2,V_ES.GC3,V_ES.GC4,V_ES.GC5,V_SELLER_COMP_SERVICE.BANKING_SERVICE_ID,V_SELLER_COMP_SERVICE.BANKING_SERVICE_NUMBER,V_SELLER_COMP_SERVICE.M_COMPANY_ID INTO 
         V_ES_ORDER.T_ENERGY_SALE_ID,V_ES_ORDER.SELLER_COMP_SERV_ID,V_ES_ORDER.SELLER_END_ORG_ID,V_ES_ORDER.MONTH,V_ES_ORDER.YEAR,V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDER.FROM_DT,V_ES_ORDER.TO_DT,V_ES_ORDER.LOSS,
         V_ES_ORDER.MULTIPLE_BUYERS,V_ES_ORDER.USAGE_DETAIL_AVAIL,V_ES_ORDER.SIMPLE_ENERGY_SALE,V_ES_ORDER.TOTAL_C1,V_ES_ORDER.TOTAL_C2,V_ES_ORDER.TOTAL_C3,V_ES_ORDER.TOTAL_C4,V_ES_ORDER.TOTAL_C5,V_ES_ORDER.TOTAL_GEN_UNITS_SOLD,V_ES_ORDER.TOTAL_BC1,V_ES_ORDER.TOTAL_BC2,V_ES_ORDER.TOTAL_BC3,V_ES_ORDER.TOTAL_BC4,V_ES_ORDER.TOTAL_BC5,V_ES_ORDER.TOTAL_BANKING_UNITS_SOLD,V_ES_ORDER.TOTAL_UNITS_SOLD,
         V_ES_ORDER.D_SELL_COMP_NAME,V_ES_ORDER.D_SELL_COMP_CODE,V_ES_ORDER.D_SELL_COMP_SERV_NUMBER,V_ES_ORDER.D_SELL_ORG_NAME,V_ES_ORDER.D_SELL_ORG_CODE,V_ES_ORDER.TOTAL_GC1,V_ES_ORDER.TOTAL_GC2,V_ES_ORDER.TOTAL_GC3,V_ES_ORDER.TOTAL_GC4,V_ES_ORDER.TOTAL_GC5,V_ES_ORDER.BANKING_SERVICE_ID,V_ES_ORDER.BANKING_SERVICE_NUMBER,V_ES_ORDER.SELLER_COMP_ID 
         FROM DUAL;

         V_ES_ORDER.ID := F_ENERGY_SALE_ORDER_SEQ.NEXTVAL;    
         INSERT INTO OPENACCESS.F_ENERGY_SALE_ORDER VALUES V_ES_ORDER;  

            OPEN V_ES_USAGESUMMARY_CURSOR for SELECT * FROM T_ES_USAGE_SUMMARY WHERE T_ENERGY_SALE_ID = V_ES_ID;

            LOOP
            FETCH V_ES_USAGESUMMARY_CURSOR INTO V_ES_USAGESUMMARY;

            SELECT * INTO V_BUYER_COMP_SERVICE FROM V_COMPANY_SERVICE WHERE ID=V_ES_USAGESUMMARY.BUYER_COMP_SERV_ID;

            EXIT WHEN V_ES_USAGESUMMARY_CURSOR%NOTFOUND;

            V_ES_ORDERLINE.ID := F_ENERGY_SALE_ORDER_LINE_SEQ.NEXTVAL;  
             DBMS_OUTPUT.PUT_LINE('V_ES_ORDERLINE'||V_ES_ORDERLINE.ID);
           SELECT V_ES_ID,V_ES_ORDER.ID,V_ES_USAGESUMMARY.BUYER_END_ORG_ID,V_BUYER_COMP_SERVICE.M_SUBSTATION_ID,V_ES_USAGESUMMARY.BUYER_COMP_SERV_ID,V_ES_USAGESUMMARY.C1,V_ES_USAGESUMMARY.C2,V_ES_USAGESUMMARY.C3,V_ES_USAGESUMMARY.C4,V_ES_USAGESUMMARY.C5,V_ES_USAGESUMMARY.TOTAL,V_BUYER_COMP_SERVICE.M_COMPANY_NAME,V_BUYER_COMP_SERVICE.M_COMPANY_CODE,
            V_BUYER_COMP_SERVICE."number",V_BUYER_COMP_SERVICE.M_ORG_NAME,V_BUYER_COMP_SERVICE.M_ORG_CODE,V_BUYER_COMP_SERVICE.M_SUBSTATION_NAME,V_BUYER_COMP_SERVICE.M_COMPANY_ID,V_BUYER_COMP_SERVICE.VOLTAGE_CODE,V_ES_USAGESUMMARY.UNIT_COST,V_ES_USAGESUMMARY.TOTAL_AMOUNT_PAYABLE,V_ES_USAGESUMMARY.TOTAL_AMOUNT_CHARGABLE,V_ES_USAGESUMMARY.NET_AMOUNT_PAYABLE INTO 
            V_ES_ORDERLINE.T_ENERGY_SALE_ID,V_ES_ORDERLINE.F_ENERGY_SALE_ORDER_ID,V_ES_ORDERLINE.BUYER_END_ORG_ID,V_ES_ORDERLINE.BUYER_END_SS_ID,V_ES_ORDERLINE.BUYER_COMP_SERV_ID,
            V_ES_ORDERLINE.C1,V_ES_ORDERLINE.C2,V_ES_ORDERLINE.C3,V_ES_ORDERLINE.C4,V_ES_ORDERLINE.C5,V_ES_ORDERLINE.TOTAL_UNITS_SOLD,V_ES_ORDERLINE.D_BUYER_COMP_NAME,V_ES_ORDERLINE.D_BUYER_COMP_CODE,V_ES_ORDERLINE.D_BUYER_COMP_SERV_NAME,V_ES_ORDERLINE.D_BUYER_ORG_NAME,V_ES_ORDERLINE.D_BUYER_ORG_CODE,V_ES_ORDERLINE.D_BUYER_SS_NAME,V_ES_ORDERLINE.BUYER_COMP_ID,V_ES_ORDERLINE.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE.UNIT_COST,V_ES_ORDERLINE.TOTAL_AMOUNT_PAYABLE,V_ES_ORDERLINE.TOTAL_AMOUNT_CHARGABLE,V_ES_ORDERLINE.NET_AMOUNT_PAYABLE FROM DUAL;         

            IF V_ES.IS_STB='Y' THEN
              V_ES_ORDERLINE.D_DRAWAL_VOLTAGE_CODE := V_ES_ORDER.INJECTING_VOLTAGE_CODE;
            END IF;

           INSERT INTO F_ENERGY_SALE_ORDER_LINES VALUES V_ES_ORDERLINE;  

            END LOOP;


            OPEN V_ES_CHARGE_CURSOR for SELECT ESCHARGE.M_COMP_SERV_ID,ESCHARGE.CHARGE_CODE,ESCHARGE.TOTAL_CHARGE,CHARGEDEFN.CHARGE_DESC FROM T_ES_CHARGE ESCHARGE  LEFT JOIN M_CHARGE_DEFN CHARGEDEFN ON ESCHARGE.CHARGE_CODE = CHARGEDEFN.CHARGE_CODE WHERE T_ENERGY_SALE_ID = V_ES_ID;

            LOOP
             FETCH V_ES_CHARGE_CURSOR INTO CHARGE_COMP_SERVICE_ID,CHARGE_CODE,TOTAL_CHARGE,CHARGE_DESC;
             EXIT WHEN V_ES_CHARGE_CURSOR%NOTFOUND;
             V_ENERGY_CHARGE.ID := F_ENERGY_CHARGES_SEQ.NEXTVAL;  
             SELECT CHARGE_COMP_SERVICE_ID,CHARGE_CODE,TOTAL_CHARGE,CHARGE_DESC,V_ES_ORDER.ID INTO
             V_ENERGY_CHARGE.M_COMPANY_SERVICE_ID,V_ENERGY_CHARGE.CHARGE_CODE,V_ENERGY_CHARGE.TOTAL_CHARGES,V_ENERGY_CHARGE.CHARGE_DESC,V_ENERGY_CHARGE.F_ENERGY_SALE_ORDER_ID FROM DUAL;
             INSERT INTO F_ENERGY_CHARGES VALUES V_ENERGY_CHARGE;  
             END LOOP;





              SELECT V_ES_ORDER.SELLER_END_ORG_ID,V_ES_ORDER.SELLER_COMP_ID,V_ES_ORDER.SELLER_COMP_SERV_ID,V_ES_ORDER.MONTH,V_ES_ORDER.YEAR,V_ES_ORDER.FROM_DT,V_ES_ORDER.TO_DT,V_ES_ORDER.TOTAL_GC1,
            V_ES_ORDER.TOTAL_GC2,V_ES_ORDER.TOTAL_GC3,V_ES_ORDER.TOTAL_GC4,V_ES_ORDER.TOTAL_GC5,V_ES_ORDER.TOTAL_GEN_UNITS_SOLD,V_ES_ORDER.ID,V_ES_ORDER.D_SELL_COMP_NAME,V_ES_ORDER.D_SELL_COMP_CODE,V_ES_ORDER.D_SELL_COMP_SERV_NUMBER,V_ES_ORDER.D_SELL_ORG_NAME,V_ES_ORDER.D_SELL_ORG_CODE INTO
            V_ENERGY_LEDGER.M_ORG_ID,V_ENERGY_LEDGER.M_COMPANY_ID,V_ENERGY_LEDGER.M_COMPANY_SERVICE_ID,V_ENERGY_LEDGER.MONTH,V_ENERGY_LEDGER.YEAR,V_ENERGY_LEDGER.FROM_DT,V_ENERGY_LEDGER.TO_DT,V_ENERGY_LEDGER.C1,
            V_ENERGY_LEDGER.C2,V_ENERGY_LEDGER.C3,V_ENERGY_LEDGER.C4,V_ENERGY_LEDGER.C5,V_ENERGY_LEDGER.ENERGY_IN,V_ENERGY_LEDGER.F_ENERGY_SALE_ORDER_ID,V_ENERGY_LEDGER.D_COMP_NAME,V_ENERGY_LEDGER.D_COMP_CODE,V_ENERGY_LEDGER.D_COMP_SERV_NUMBER,V_ENERGY_LEDGER.D_ORG_NAME,V_ENERGY_LEDGER.D_ORG_CODE FROM DUAL;

            V_ENERGY_LEDGER.LEDGER_DATE:= SYSDATE;
            V_ENERGY_LEDGER.SERVICE_TYPE_CODE:= '03';

            V_ENERGY_LEDGER.ID:=F_ENERGY_LEDGER_SEQ.NEXTVAL;
            INSERT INTO F_ENERGY_LEDGER VALUES V_ENERGY_LEDGER;

            IF V_ES.TOTAL_BANK_UNITS_USED!=NULL AND V_ES.TOTAL_BANK_UNITS_USED>0 THEN

                SELECT V_ES_ORDER.SELLER_END_ORG_ID,V_ES_ORDER.SELLER_COMP_ID,V_ES_ORDER.SELLER_COMP_SERV_ID,V_ES_ORDER.MONTH,V_ES_ORDER.YEAR,V_ES_ORDER.FROM_DT,V_ES_ORDER.TO_DT,V_ES_ORDER.TOTAL_GC1,
                V_ES_ORDER.TOTAL_GC2,V_ES_ORDER.TOTAL_GC3,V_ES_ORDER.TOTAL_GC4,V_ES_ORDER.TOTAL_GC5,V_ES_ORDER.TOTAL_BANKING_UNITS_SOLD,V_ES_ORDER.ID,V_ES_ORDER.D_SELL_COMP_NAME,V_ES_ORDER.D_SELL_COMP_CODE,V_ES_ORDER.D_SELL_COMP_SERV_NUMBER,V_ES_ORDER.D_SELL_ORG_NAME,V_ES_ORDER.D_SELL_ORG_CODE INTO
                V_ENERGY_LEDGER_BANK.M_ORG_ID,V_ENERGY_LEDGER_BANK.M_COMPANY_ID,V_ENERGY_LEDGER_BANK.M_COMPANY_SERVICE_ID,V_ENERGY_LEDGER_BANK.MONTH,V_ENERGY_LEDGER_BANK.YEAR,V_ENERGY_LEDGER_BANK.FROM_DT,V_ENERGY_LEDGER_BANK.TO_DT,V_ENERGY_LEDGER_BANK.C1,
                V_ENERGY_LEDGER_BANK.C2,V_ENERGY_LEDGER_BANK.C3,V_ENERGY_LEDGER_BANK.C4,V_ENERGY_LEDGER_BANK.C5,V_ENERGY_LEDGER_BANK.ENERGY_IN,V_ENERGY_LEDGER_BANK.F_ENERGY_SALE_ORDER_ID,V_ENERGY_LEDGER_BANK.D_COMP_NAME,V_ENERGY_LEDGER_BANK.D_COMP_CODE,V_ENERGY_LEDGER_BANK.D_COMP_SERV_NUMBER,V_ENERGY_LEDGER_BANK.D_ORG_NAME,V_ENERGY_LEDGER_BANK.D_ORG_CODE FROM DUAL;

                V_ENERGY_LEDGER_BANK.LEDGER_DATE:= SYSDATE;
                V_ENERGY_LEDGER_BANK.SERVICE_TYPE_CODE:= '01';



                V_ENERGY_LEDGER_BANK.ID:=F_ENERGY_LEDGER_SEQ.NEXTVAL;
                INSERT INTO F_ENERGY_LEDGER VALUES V_ENERGY_LEDGER_BANK;

            END IF;


--            OPEN V_ES_ORDERLINE_CURSOR for SELECT * FROM F_ENERGY_SALE_ORDER_LINES WHERE F_ENERGY_SALE_ORDER_ID = '69';
            OPEN V_ES_ORDERLINE_CURSOR for SELECT * FROM F_ENERGY_SALE_ORDER_LINES WHERE T_ENERGY_SALE_ID = V_ES_ID;

            LOOP
            FETCH V_ES_ORDERLINE_CURSOR INTO V_ES_ORDERLINE_LEDGER;

            EXIT WHEN V_ES_ORDERLINE_CURSOR%NOTFOUND;



            V_ENERGY_LEDGER_BUYER.LEDGER_DATE:= SYSDATE;
            V_ENERGY_LEDGER_BUYER.SERVICE_TYPE_CODE:= '02';

            V_LOSS_CAL_BUYER_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C1,V_LOSS_CAL_BUYER_TRANS,V_LOSS_CAL_BUYER_DIST,V_LOSS_CAL_BUYER_TOTAL,V_LOSS_CAL_BUYER_DRAWAL1);
            V_LOSS_CAL_BUYER_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C2,V_LOSS_CAL_BUYER_TRANS,V_LOSS_CAL_BUYER_DIST,V_LOSS_CAL_BUYER_TOTAL,V_LOSS_CAL_BUYER_DRAWAL2);
            V_LOSS_CAL_BUYER_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C3,V_LOSS_CAL_BUYER_TRANS,V_LOSS_CAL_BUYER_DIST,V_LOSS_CAL_BUYER_TOTAL,V_LOSS_CAL_BUYER_DRAWAL3);
            V_LOSS_CAL_BUYER_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C4,V_LOSS_CAL_BUYER_TRANS,V_LOSS_CAL_BUYER_DIST,V_LOSS_CAL_BUYER_TOTAL,V_LOSS_CAL_BUYER_DRAWAL4);
            V_LOSS_CAL_BUYER_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C5,V_LOSS_CAL_BUYER_TRANS,V_LOSS_CAL_BUYER_DIST,V_LOSS_CAL_BUYER_TOTAL,V_LOSS_CAL_BUYER_DRAWAL5);
            V_LOSS_CAL_BUYER_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.TOTAL_UNITS_SOLD,V_LOSS_CAL_BUYER_TRANS,V_LOSS_CAL_BUYER_DIST,V_LOSS_CAL_BUYER_TOTAL,V_LOSS_CAL_BUYER_DRAWALOUT);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_TOTAL'||V_LOSS_CAL_BUYER_TOTAL);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_DIST'||V_LOSS_CAL_BUYER_DIST);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_TRANS'||V_LOSS_CAL_BUYER_TRANS);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_DRAWAL'||V_LOSS_CAL_BUYER_DRAWAL1||'-------'||V_LOSS_CAL_BUYER_DRAWAL2||'-------'||V_LOSS_CAL_BUYER_DRAWAL3||'-------'||V_LOSS_CAL_BUYER_DRAWAL4||'-------'||V_LOSS_CAL_BUYER_DRAWAL5||'-------'||V_LOSS_CAL_BUYER_DRAWALIN);
          SELECT V_ES_ORDERLINE_LEDGER.BUYER_END_ORG_ID,V_ES_ORDERLINE_LEDGER.BUYER_COMP_ID,V_ES_ORDERLINE_LEDGER.BUYER_COMP_SERV_ID,V_ES_ORDER.MONTH,V_ES_ORDER.YEAR,V_ES_ORDER.FROM_DT,V_ES_ORDER.TO_DT,
            V_LOSS_CAL_BUYER_DRAWAL1,V_LOSS_CAL_BUYER_DRAWAL2,V_LOSS_CAL_BUYER_DRAWAL3,V_LOSS_CAL_BUYER_DRAWAL4,V_LOSS_CAL_BUYER_DRAWAL5,V_LOSS_CAL_BUYER_DRAWALOUT,V_ES_ORDER.ID,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_CODE,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_SERV_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_ORG_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_ORG_CODE,V_ES_ORDERLINE_LEDGER.ID  INTO 
            V_ENERGY_LEDGER_BUYER.M_ORG_ID,V_ENERGY_LEDGER_BUYER.M_COMPANY_ID,V_ENERGY_LEDGER_BUYER.M_COMPANY_SERVICE_ID,V_ENERGY_LEDGER_BUYER.MONTH,V_ENERGY_LEDGER_BUYER.YEAR,V_ENERGY_LEDGER_BUYER.FROM_DT,V_ENERGY_LEDGER_BUYER.TO_DT,V_ENERGY_LEDGER_BUYER.C1,
            V_ENERGY_LEDGER_BUYER.C2,V_ENERGY_LEDGER_BUYER.C3,V_ENERGY_LEDGER_BUYER.C4,V_ENERGY_LEDGER_BUYER.C5,V_ENERGY_LEDGER_BUYER.ENERGY_OUT,V_ENERGY_LEDGER_BUYER.F_ENERGY_SALE_ORDER_ID,V_ENERGY_LEDGER_BUYER.D_COMP_NAME,V_ENERGY_LEDGER_BUYER.D_COMP_CODE,V_ENERGY_LEDGER_BUYER.D_COMP_SERV_NUMBER,V_ENERGY_LEDGER_BUYER.D_ORG_NAME,V_ENERGY_LEDGER_BUYER.D_ORG_CODE,V_ENERGY_LEDGER_BUYER.F_ENERGY_SALE_ORDER_LINES_ID FROM DUAL;


            V_ENERGY_LEDGER_BUYER.ID:=F_ENERGY_LEDGER_SEQ.NEXTVAL;
            INSERT INTO F_ENERGY_LEDGER VALUES V_ENERGY_LEDGER_BUYER;


             V_ENERGY_LEDGER_SELLER_TL.LEDGER_DATE:= SYSDATE;
            V_ENERGY_LEDGER_SELLER_TL.SERVICE_TYPE_CODE:= '04';

            V_LOSS_CAL_SELLER_TL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C1,V_LOSS_CAL_SELLER_TL_TRANS1,V_LOSS_CAL_SELLER_TL_DIST,V_LOSS_CAL_SELLER_TL_TOTAL,V_LOSS_CAL_SELLER_TL_DRAWAL);
            V_LOSS_CAL_SELLER_TL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C2,V_LOSS_CAL_SELLER_TL_TRANS2,V_LOSS_CAL_SELLER_TL_DIST,V_LOSS_CAL_SELLER_TL_TOTAL,V_LOSS_CAL_SELLER_TL_DRAWAL);
            V_LOSS_CAL_SELLER_TL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C3,V_LOSS_CAL_SELLER_TL_TRANS3,V_LOSS_CAL_SELLER_TL_DIST,V_LOSS_CAL_SELLER_TL_TOTAL,V_LOSS_CAL_SELLER_TL_DRAWAL);
            V_LOSS_CAL_SELLER_TL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C4,V_LOSS_CAL_SELLER_TL_TRANS4,V_LOSS_CAL_SELLER_TL_DIST,V_LOSS_CAL_SELLER_TL_TOTAL,V_LOSS_CAL_SELLER_TL_DRAWAL);
            V_LOSS_CAL_SELLER_TL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C5,V_LOSS_CAL_SELLER_TL_TRANS5,V_LOSS_CAL_SELLER_TL_DIST,V_LOSS_CAL_SELLER_TL_TOTAL,V_LOSS_CAL_SELLER_TL_DRAWAL);
            V_LOSS_CAL_SELLER_TL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.GEN_UNITS_SOLD,V_LOSS_CAL_SELLER_TL_TRANSOUT,V_LOSS_CAL_SELLER_TL_DIST,V_LOSS_CAL_SELLER_TL_TOTAL,V_LOSS_CAL_SELLER_TL_DRAWAL);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_TOTAL'||V_LOSS_CAL_SELLER_TL_TOTAL);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_DIST'||V_LOSS_CAL_SELLER_TL_DIST);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_TRANS'||V_LOSS_CAL_SELLER_TL_TRANS);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_DRAWAL'||V_LOSS_CAL_SELLER_TL_DRAWAL1||'-------'||V_LOSS_CAL_SELLER_TL_DRAWAL2||'-------'||V_LOSS_CAL_SELLER_TL_DRAWAL3||'-------'||V_LOSS_CAL_SELLER_TL_DRAWAL4||'-------'||V_LOSS_CAL_SELLER_TL_DRAWAL5||'-------'||V_LOSS_CAL_SELLER_TL_DRAWALIN);
            SELECT V_ES_ORDERLINE_LEDGER.BUYER_END_ORG_ID,V_ES_ORDERLINE_LEDGER.BUYER_COMP_ID,V_ES_ORDERLINE_LEDGER.BUYER_COMP_SERV_ID,V_ES_ORDER.MONTH,V_ES_ORDER.YEAR,V_ES_ORDER.FROM_DT,V_ES_ORDER.TO_DT,
            V_LOSS_CAL_SELLER_TL_TRANS1,V_LOSS_CAL_SELLER_TL_TRANS2,V_LOSS_CAL_SELLER_TL_TRANS3,V_LOSS_CAL_SELLER_TL_TRANS4,V_LOSS_CAL_SELLER_TL_TRANS5,V_LOSS_CAL_SELLER_TL_TRANSOUT,V_ES_ORDER.ID,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_CODE,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_SERV_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_ORG_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_ORG_CODE,V_ES_ORDERLINE_LEDGER.ID  INTO 
           V_ENERGY_LEDGER_SELLER_TL.M_ORG_ID,V_ENERGY_LEDGER_SELLER_TL.M_COMPANY_ID,V_ENERGY_LEDGER_SELLER_TL.M_COMPANY_SERVICE_ID,V_ENERGY_LEDGER_SELLER_TL.MONTH,V_ENERGY_LEDGER_SELLER_TL.YEAR,V_ENERGY_LEDGER_SELLER_TL.FROM_DT,V_ENERGY_LEDGER_SELLER_TL.TO_DT,V_ENERGY_LEDGER_SELLER_TL.C1,
            V_ENERGY_LEDGER_SELLER_TL.C2,V_ENERGY_LEDGER_SELLER_TL.C3,V_ENERGY_LEDGER_SELLER_TL.C4,V_ENERGY_LEDGER_SELLER_TL.C5,V_ENERGY_LEDGER_SELLER_TL.ENERGY_OUT,V_ENERGY_LEDGER_SELLER_TL.F_ENERGY_SALE_ORDER_ID,V_ENERGY_LEDGER_SELLER_TL.D_COMP_NAME,V_ENERGY_LEDGER_SELLER_TL.D_COMP_CODE,V_ENERGY_LEDGER_SELLER_TL.D_COMP_SERV_NUMBER,V_ENERGY_LEDGER_SELLER_TL.D_ORG_NAME,V_ENERGY_LEDGER_SELLER_TL.D_ORG_CODE,V_ENERGY_LEDGER_SELLER_TL.F_ENERGY_SALE_ORDER_LINES_ID FROM DUAL;

            V_ENERGY_LEDGER_SELLER_TL.ID:=F_ENERGY_LEDGER_SEQ.NEXTVAL;
            INSERT INTO F_ENERGY_LEDGER VALUES V_ENERGY_LEDGER_SELLER_TL;




            V_ENERGY_LEDGER_SELLER_DL.LEDGER_DATE:= SYSDATE;
            V_ENERGY_LEDGER_SELLER_DL.SERVICE_TYPE_CODE:= '05';

            V_LOSS_CAL_SELLER_DL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C1,V_LOSS_CAL_SELLER_DL_TRANS,V_LOSS_CAL_SELLER_DL_DIST1,V_LOSS_CAL_SELLER_DL_TOTAL,V_LOSS_CAL_SELLER_DL_DRAWAL);
            V_LOSS_CAL_SELLER_DL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C2,V_LOSS_CAL_SELLER_DL_TRANS,V_LOSS_CAL_SELLER_DL_DIST2,V_LOSS_CAL_SELLER_DL_TOTAL,V_LOSS_CAL_SELLER_DL_DRAWAL);
            V_LOSS_CAL_SELLER_DL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C3,V_LOSS_CAL_SELLER_DL_TRANS,V_LOSS_CAL_SELLER_DL_DIST3,V_LOSS_CAL_SELLER_DL_TOTAL,V_LOSS_CAL_SELLER_DL_DRAWAL);
            V_LOSS_CAL_SELLER_DL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C4,V_LOSS_CAL_SELLER_DL_TRANS,V_LOSS_CAL_SELLER_DL_DIST4,V_LOSS_CAL_SELLER_DL_TOTAL,V_LOSS_CAL_SELLER_DL_DRAWAL);
            V_LOSS_CAL_SELLER_DL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C5,V_LOSS_CAL_SELLER_DL_TRANS,V_LOSS_CAL_SELLER_DL_DIST5,V_LOSS_CAL_SELLER_DL_TOTAL,V_LOSS_CAL_SELLER_DL_DRAWAL);
            V_LOSS_CAL_SELLER_DL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.GEN_UNITS_SOLD,V_LOSS_CAL_SELLER_DL_TRANS,V_LOSS_CAL_SELLER_DL_DISTOUT,V_LOSS_CAL_SELLER_DL_TOTAL,V_LOSS_CAL_SELLER_DL_DRAWAL);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_TOTAL'||V_LOSS_CAL_SELLER_DL_TOTAL);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_DIST'||V_LOSS_CAL_SELLER_DL_DIST);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_TRANS'||V_LOSS_CAL_SELLER_DL_TRANS);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_DRAWAL'||V_LOSS_CAL_SELLER_DL_DRAWAL1||'-------'||V_LOSS_CAL_SELLER_DL_DRAWAL2||'-------'||V_LOSS_CAL_SELLER_DL_DRAWAL3||'-------'||V_LOSS_CAL_SELLER_DL_DRAWAL4||'-------'||V_LOSS_CAL_SELLER_DL_DRAWAL5||'-------'||V_LOSS_CAL_SELLER_DL_DRAWALIN);
            SELECT V_ES_ORDERLINE_LEDGER.BUYER_END_ORG_ID,V_ES_ORDERLINE_LEDGER.BUYER_COMP_ID,V_ES_ORDERLINE_LEDGER.BUYER_COMP_SERV_ID,V_ES_ORDER.MONTH,V_ES_ORDER.YEAR,V_ES_ORDER.FROM_DT,V_ES_ORDER.TO_DT,
            V_LOSS_CAL_SELLER_DL_DIST1,V_LOSS_CAL_SELLER_DL_DIST2,V_LOSS_CAL_SELLER_DL_DIST3,V_LOSS_CAL_SELLER_DL_DIST4,V_LOSS_CAL_SELLER_DL_DIST5,V_LOSS_CAL_SELLER_DL_DISTOUT,V_ES_ORDER.ID,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_CODE,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_SERV_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_ORG_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_ORG_CODE,V_ES_ORDERLINE_LEDGER.ID  INTO 
           V_ENERGY_LEDGER_SELLER_DL.M_ORG_ID,V_ENERGY_LEDGER_SELLER_DL.M_COMPANY_ID,V_ENERGY_LEDGER_SELLER_DL.M_COMPANY_SERVICE_ID,V_ENERGY_LEDGER_SELLER_DL.MONTH,V_ENERGY_LEDGER_SELLER_DL.YEAR,V_ENERGY_LEDGER_SELLER_DL.FROM_DT,V_ENERGY_LEDGER_SELLER_DL.TO_DT,V_ENERGY_LEDGER_SELLER_DL.C1,
            V_ENERGY_LEDGER_SELLER_DL.C2,V_ENERGY_LEDGER_SELLER_DL.C3,V_ENERGY_LEDGER_SELLER_DL.C4,V_ENERGY_LEDGER_SELLER_DL.C5,V_ENERGY_LEDGER_SELLER_DL.ENERGY_OUT,V_ENERGY_LEDGER_SELLER_DL.F_ENERGY_SALE_ORDER_ID,V_ENERGY_LEDGER_SELLER_DL.D_COMP_NAME,V_ENERGY_LEDGER_SELLER_DL.D_COMP_CODE,V_ENERGY_LEDGER_SELLER_DL.D_COMP_SERV_NUMBER,V_ENERGY_LEDGER_SELLER_DL.D_ORG_NAME,V_ENERGY_LEDGER_SELLER_DL.D_ORG_CODE,V_ENERGY_LEDGER_SELLER_DL.F_ENERGY_SALE_ORDER_LINES_ID FROM DUAL;

            V_ENERGY_LEDGER_SELLER_DL.ID:=F_ENERGY_LEDGER_SEQ.NEXTVAL;
            INSERT INTO F_ENERGY_LEDGER VALUES V_ENERGY_LEDGER_SELLER_DL;

            END LOOP;


           UPDATE T_ENERGY_SALE SET STATUS_CODE='APPROVED' WHERE ID=V_ES_ID;

       ELSE 
        V_REASON    := 'CANNOT UPDATE ALREADY APPROVED ENERGY SALE';
        V_RESULT    := 'FAILURE';
        GOTO THE_END;
       END IF;




      EXCEPTION
              WHEN OTHERS THEN
                V_EXCEPTION_CODE := SQLCODE;
                V_EXCEPTION_MSG  := SUBSTR(SQLERRM, 1, 100);
                V_RESULT := 'FAILURE' || ' - ' || V_EXCEPTION_CODE || ' - ' || V_EXCEPTION_MSG;
                DBMS_OUTPUT.PUT_LINE('ISSUE IN ENERGY SALE CONFIRMATION-'||V_RESULT);

 END;
 <<THE_END>>
IF V_RESULT = 'SUCCESS' THEN
  COMMIT;
ELSE
  v_result := v_result || ' - ' || v_reason;
END IF;
RETURN V_RESULT;
END ENERGY_SALE_CONFIRMATION;

/
--------------------------------------------------------
--  DDL for Function STB_PMT_CALC
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "OPENACCESS"."STB_PMT_CALC" 
(V_GS_ID VARCHAR2) RETURN VARCHAR2 
AS 
   
    V_RESULT VARCHAR(300):='SUCCESS'; 
    V_EXCEPTION_CODE VARCHAR2(150);
    V_EXCEPTION_MSG  VARCHAR2(150); 
    V_REASON VARCHAR2(200); 
    V_GS T_GEN_STMT%ROWTYPE;
    V_DOC VARCHAR2(150);
    V_DATE DATE;
    V_COMP_SERV VARCHAR2(150);
    V_STB_PMT NUMBER;


BEGIN  
   BEGIN
     SELECT TO_DATE(CONCAT(STMT_YEAR,(CONCAT(CONCAT('-',STMT_MONTH),'-01'))),'YYYY-MM-DD'),M_COMPANY_SERVICE_ID INTO V_DATE,V_COMP_SERV
     FROM T_GEN_STMT WHERE ID=V_GS_ID;     
dbms_output.put_line('V_COMP_SERV----'||V_COMP_SERV || '---DATE---' || V_DATE);

    SELECT COMMISSION_DATE INTO V_DOC FROM M_POWERPLANT WHERE M_SERVICE_ID = V_COMP_SERV;
     dbms_output.put_line('COMMISSION_DATE----'||V_DOC);

--     SELECT COUNT(*) INTO V_PERIOD1  FROM DUAL WHERE V_DOC < '2006-05-15';
     IF V_DOC < TO_DATE('2006-05-15','YYYY-MM-DD') THEN
        V_STB_PMT := '2.75';
     ELSIF V_DOC > TO_DATE('2006-05-15','YYYY-MM-DD')AND  V_DOC < TO_DATE('2009-03-19' ,'YYYY-MM-DD')THEN
      V_STB_PMT := '2.90';      
     ELSIF V_DOC > TO_DATE('2009-03-20','YYYY-MM-DD')  AND  V_DOC < TO_DATE('2009-03-31','YYYY-MM-DD')  THEN
      V_STB_PMT := '3.24';
     ELSIF V_DOC > TO_DATE('2009-04-01','YYYY-MM-DD')  AND  V_DOC <  TO_DATE('2012-07-31','YYYY-MM-DD')  THEN
      V_STB_PMT := '3.39';
     ELSIF V_DOC > TO_DATE('2012-08-01','YYYY-MM-DD') AND  V_DOC < TO_DATE('2016-03-31','YYYY-MM-DD')  THEN
      V_STB_PMT := '3.51';
     ELSIF V_DOC > TO_DATE('2016-04-01','YYYY-MM-DD')  THEN
      V_STB_PMT := '3.70';
     END IF;
  dbms_output.put_line('V_STB_PMT----'||V_STB_PMT);

      EXCEPTION
              WHEN OTHERS THEN
                V_EXCEPTION_CODE := SQLCODE;
                V_EXCEPTION_MSG  := SUBSTR(SQLERRM, 1, 100);
                V_RESULT := 'FAILURE' || ' - ' || V_EXCEPTION_CODE || ' - ' || V_EXCEPTION_MSG;
                DBMS_OUTPUT.PUT_LINE('ISSUE IN STB_PMT_CALC-'||V_RESULT);

 END;
 <<THE_END>>
IF V_RESULT = 'SUCCESS' THEN
  COMMIT;
ELSE
  v_result := v_result || ' - ' || v_reason;
END IF;
RETURN V_STB_PMT;
END STB_PMT_CALC;


/
-- Unable to render SYNONYM DDL for object PUBLIC.DBMS_OUTPUT with DBMS_METADATA attempting internal generator.
CREATE PUBLIC SYNONYM DBMS_OUTPUT FOR SYS.DBMS_OUTPUT
-- Unable to render SYNONYM DDL for object PUBLIC.DUAL with DBMS_METADATA attempting internal generator.
CREATE PUBLIC SYNONYM DUAL FOR SYS."DUAL"
