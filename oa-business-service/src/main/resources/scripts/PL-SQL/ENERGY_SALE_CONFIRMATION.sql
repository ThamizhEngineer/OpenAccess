--------------------------------------------------------
--  File created - Monday-April-09-2018   
--------------------------------------------------------
DROP FUNCTION "OPENACCESS"."ENERGY_SALE_CONFIRMATION";
DROP FUNCTION "OPENACCESS"."LOSS_CALCULATION";
--------------------------------------------------------
--  DDL for View V_COMPANY_SERVICE
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "OPENACCESS"."V_COMPANY_SERVICE" ("ID", "COMP_SER_TYPE_CODE", "COMP_SER_TYPE_NAME", "number", "M_COMPANY_ID", "M_COMPANY_CODE", "M_COMPANY_NAME", "COMPANY_IS_INTERNAL", "M_ORG_ID", "M_ORG_CODE", "M_ORG_NAME", "CAPACITY", "M_SUBSTATION_ID", "M_SUBSTATION_CODE", "M_SUBSTATION_NAME", "M_FEEDER_ID", "M_FEEDER_CODE", "M_FEEDER_NAME", "REF_NUMBER", "VOLTAGE_CODE", "VOLTAGE_NAME", "TARIFF", "ENABLED", "BANKING_SERVICE_ID", "BANKING_SERVICE_NUMBER", "DL_SERVICE_ID", "DL_SERVICE_NUMBER", "TL_SERVICE_ID", "TL_SERVICE_NUMBER", "UNADJUSTED_SERVICE_ID", "UNADJUSTED_SERVICE_NUMBER", "M_COMPANY_METER_ID", "MODEM_NUMBER", "METER_NUMBER", "MF", "ACCURACY_CLASS_CODE", "IS_ABTMETER", "METER_MAKE_CODE", "FUEL_TYPE_CODE", "FUEL_TYPE_NAME", "METER_CT1", "METER_CT2", "METER_CT3", "METER_PT1", "METER_PT2", "METER_PT3") AS 
  select companyservice.id,companyservice.COMP_SER_TYPE_CODE, typecodes.value_desc as COMP_SER_TYPE_NAME,companyservice."number",companyservice.m_company_id,company.code as M_COMPANY_CODE,company.name AS M_COMPANY_NAME,company.IS_INTERNAL AS COMPANY_IS_INTERNAL,companyservice.m_org_id,
					org.code as M_ORG_CODE, org.name as M_ORG_NAME,companyservice.capacity,
					companyservice.m_substation_id,substation.code as M_SUBSTATION_CODE,substation.name as M_SUBSTATION_NAME,companyservice.m_feeder_id,feeder.code as M_FEEDER_CODE,feeder.name as M_FEEDER_NAME,companyservice.ref_number,companyservice.voltage_code,voltagecodes.VALUE_DESC as VOLTAGE_NAME,companyservice.tariff,companyservice.enabled,
					companyservice.BANKING_SERVICE_ID, companyservice.BANKING_SERVICE_NUMBER, companyservice.DL_SERVICE_ID, companyservice.DL_SERVICE_NUMBER, companyservice.TL_SERVICE_ID, companyservice.TL_SERVICE_NUMBER,companyservice.UNADJUSTED_SERVICE_ID, companyservice.UNADJUSTED_SERVICE_NUMBER,
					companymeter.id AS M_COMPANY_METER_ID, companymeter.MODEM_NUMBER, companymeter.METER_NUMBER, companymeter.MF, companymeter.ACCURACY_CLASS_CODE, companymeter.IS_ABTMETER, companymeter.METER_MAKE_CODE,powerplant.FUEL_TYPE_CODE,fueltypecodes.VALUE_DESC as FUEL_TYPE_NAME,companymeter.METER_CT1,companymeter.METER_CT2,companymeter.METER_CT3,companymeter.METER_PT1,companymeter.METER_PT2,companymeter.METER_PT3
					from OPENACCESS.m_company_service companyservice  
					left join OPENACCESS.m_company company on company.id =companyservice.M_COMPANY_ID
					left join OPENACCESS.M_COMPANY_METER companymeter on companymeter.M_COMPANY_SERVICE_ID =companyservice.id
					left join OPENACCESS.m_org org on org.id=companyservice.M_ORG_ID
					left join OPENACCESS.m_substation substation on substation.id = companyservice.M_SUBSTATION_ID 
					left join OPENACCESS.m_feeder feeder on feeder.id = companyservice.M_FEEDER_ID 
					left join OPENACCESS.v_codes voltagecodes on companyservice.VOLTAGE_Code= voltagecodes.Value_Code AND  voltagecodes.list_code = 'VOLTAGE_CODE'
					left join OPENACCESS.v_codes typecodes on companyservice.COMP_SER_TYPE_CODE = typecodes.value_code and typecodes.list_code='SERVICE_TYPE_CODE'
                    left join OPENACCESS.M_POWERPLANT powerplant on  powerplant.M_SERVICE_ID=companyservice.id
                    left join OPENACCESS.v_codes fueltypecodes on powerplant.FUEL_TYPE_CODE= fueltypecodes.Value_Code AND  fueltypecodes.list_code = 'FUEL_TYPE_CODE'
;
--------------------------------------------------------
--  DDL for Table F_ENERGY_CHARGES
--------------------------------------------------------

  CREATE TABLE "OPENACCESS"."F_ENERGY_CHARGES" 
   (	"ID" VARCHAR2(50 BYTE), 
	"REMARKS" VARCHAR2(100 BYTE), 
	"CHARGE_CODE" VARCHAR2(50 BYTE), 
	"CHARGE_DESC" VARCHAR2(100 BYTE), 
	"CHARGE_TYPE_CODE" VARCHAR2(50 BYTE), 
	"UNIT_CHARGE" VARCHAR2(50 BYTE), 
	"TOTAL_CHARGES" VARCHAR2(50 BYTE), 
	"F_ENERGY_SALE_ORDER_ID" VARCHAR2(50 BYTE), 
	"CREATED_BY" VARCHAR2(100 BYTE), 
	"CREATED_DATE" DATE DEFAULT sysdate, 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y', 
	"M_COMPANY_SERVICE_ID" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table F_ENERGY_LEDGER
--------------------------------------------------------

  CREATE TABLE "OPENACCESS"."F_ENERGY_LEDGER" 
   (	"ID" VARCHAR2(50 BYTE), 
	"M_ORG_ID" VARCHAR2(50 BYTE), 
	"M_COMPANY_ID" VARCHAR2(50 BYTE), 
	"M_COMPANY_SERVICE_ID" VARCHAR2(50 BYTE), 
	"SERVICE_TYPE_CODE" VARCHAR2(50 BYTE), 
	"MONTH" VARCHAR2(50 BYTE), 
	"YEAR" VARCHAR2(50 BYTE), 
	"FROM_DT" DATE, 
	"TO_DT" DATE, 
	"C1" VARCHAR2(50 BYTE), 
	"C2" VARCHAR2(50 BYTE), 
	"C3" VARCHAR2(50 BYTE), 
	"C4" VARCHAR2(50 BYTE), 
	"C5" VARCHAR2(50 BYTE), 
	"LEDGER_DATE" DATE, 
	"ENERGY_IN" VARCHAR2(50 BYTE), 
	"ENERGY_OUT" VARCHAR2(50 BYTE), 
	"NULLIFY" VARCHAR2(50 BYTE), 
	"REMARKS" VARCHAR2(500 BYTE), 
	"F_ENERGY_SALE_ORDER_ID" VARCHAR2(50 BYTE), 
	"D_COMP_NAME" VARCHAR2(100 BYTE), 
	"D_COMP_CODE" VARCHAR2(50 BYTE), 
	"D_COMP_SERV_NUMBER" VARCHAR2(100 BYTE), 
	"D_ORG_NAME" VARCHAR2(100 BYTE), 
	"D_ORG_CODE" VARCHAR2(50 BYTE), 
	"F_ENERGY_SALE_ORDER_LINES_ID" VARCHAR2(100 BYTE), 
	"CREATED_BY" VARCHAR2(100 BYTE), 
	"CREATED_DATE" DATE DEFAULT sysdate, 
	"IS_CAPTIVE" CHAR(1 BYTE), 
	"FUEL_TYPE_CODE" VARCHAR2(50 BYTE), 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table F_ENERGY_SALE_ORDER
--------------------------------------------------------

  CREATE TABLE "OPENACCESS"."F_ENERGY_SALE_ORDER" 
   (	"ID" VARCHAR2(50 BYTE), 
	"T_ENERGY_SALE_ID" VARCHAR2(50 BYTE), 
	"SELLER_COMP_SERV_ID" VARCHAR2(50 BYTE), 
	"SELLER_END_ORG_ID" VARCHAR2(50 BYTE), 
	"MONTH" VARCHAR2(50 BYTE), 
	"YEAR" VARCHAR2(50 BYTE), 
	"INJECTING_VOLTAGE_CODE" VARCHAR2(50 BYTE), 
	"FROM_DT" DATE, 
	"TO_DT" DATE, 
	"LOSS" VARCHAR2(50 BYTE), 
	"MULTIPLE_BUYERS" CHAR(1 BYTE), 
	"USAGE_DETAIL_AVAIL" CHAR(1 BYTE), 
	"SIMPLE_ENERGY_SALE" CHAR(1 BYTE), 
	"TOTAL_C1" VARCHAR2(50 BYTE), 
	"TOTAL_C2" VARCHAR2(50 BYTE), 
	"TOTAL_C3" VARCHAR2(50 BYTE), 
	"TOTAL_C4" VARCHAR2(50 BYTE), 
	"TOTAL_C5" VARCHAR2(50 BYTE), 
	"TOTAL_GEN_UNITS_SOLD" VARCHAR2(50 BYTE), 
	"TOTAL_BC1" VARCHAR2(50 BYTE), 
	"TOTAL_BC2" VARCHAR2(50 BYTE), 
	"TOTAL_BC3" VARCHAR2(50 BYTE), 
	"TOTAL_BC4" VARCHAR2(50 BYTE), 
	"TOTAL_BC5" VARCHAR2(50 BYTE), 
	"TOTAL_BANKING_UNITS_SOLD" VARCHAR2(50 BYTE), 
	"TOTAL_UNITS_SOLD" VARCHAR2(50 BYTE), 
	"D_SELL_COMP_NAME" VARCHAR2(100 BYTE), 
	"D_SELL_COMP_CODE" VARCHAR2(50 BYTE), 
	"D_SELL_COMP_SERV_NUMBER" VARCHAR2(100 BYTE), 
	"D_SELL_ORG_NAME" VARCHAR2(100 BYTE), 
	"D_SELL_ORG_CODE" VARCHAR2(50 BYTE), 
	"TOTAL_GC1" VARCHAR2(50 BYTE), 
	"TOTAL_GC2" VARCHAR2(50 BYTE), 
	"TOTAL_GC3" VARCHAR2(50 BYTE), 
	"TOTAL_GC4" VARCHAR2(50 BYTE), 
	"TOTAL_GC5" VARCHAR2(50 BYTE), 
	"BANKING_SERVICE_ID" VARCHAR2(100 BYTE), 
	"BANKING_SERVICE_NUMBER" VARCHAR2(100 BYTE), 
	"SELLER_COMP_ID" VARCHAR2(100 BYTE), 
	"CREATED_BY" VARCHAR2(100 BYTE), 
	"CREATED_DATE" DATE, 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table F_ENERGY_SALE_ORDER_LINES
--------------------------------------------------------

  CREATE TABLE "OPENACCESS"."F_ENERGY_SALE_ORDER_LINES" 
   (	"ID" VARCHAR2(50 BYTE), 
	"F_ENERGY_SALE_ORDER_ID" VARCHAR2(50 BYTE), 
	"T_ENERGY_SALE_ID" VARCHAR2(50 BYTE), 
	"BUYER_END_ORG_ID" VARCHAR2(50 BYTE), 
	"BUYER_END_SS_ID" VARCHAR2(50 BYTE), 
	"BUYER_COMP_SERV_ID" VARCHAR2(50 BYTE), 
	"C1" VARCHAR2(50 BYTE), 
	"C2" VARCHAR2(50 BYTE), 
	"C3" VARCHAR2(50 BYTE), 
	"C4" VARCHAR2(50 BYTE), 
	"C5" VARCHAR2(50 BYTE), 
	"GEN_UNITS_SOLD" VARCHAR2(50 BYTE), 
	"BC1" VARCHAR2(50 BYTE), 
	"BC2" VARCHAR2(50 BYTE), 
	"BC3" VARCHAR2(50 BYTE), 
	"BC4" VARCHAR2(50 BYTE), 
	"BC5" VARCHAR2(50 BYTE), 
	"BANKING_UNITS_SOLD" VARCHAR2(50 BYTE), 
	"TOTAL_UNITS_SOLD" VARCHAR2(50 BYTE), 
	"D_BUYER_COMP_NAME" VARCHAR2(100 BYTE), 
	"D_BUYER_COMP_CODE" VARCHAR2(50 BYTE), 
	"D_BUYER_COMP_SERV_NAME" VARCHAR2(100 BYTE), 
	"D_BUYER_ORG_NAME" VARCHAR2(100 BYTE), 
	"D_BUYER_ORG_CODE" VARCHAR2(50 BYTE), 
	"D_BUYER_SS_NAME" VARCHAR2(100 BYTE), 
	"GC1" VARCHAR2(50 BYTE), 
	"GC2" VARCHAR2(50 BYTE), 
	"GC3" VARCHAR2(50 BYTE), 
	"GC4" VARCHAR2(50 BYTE), 
	"GC5" VARCHAR2(50 BYTE), 
	"BUYER_COMP_ID" VARCHAR2(100 BYTE), 
	"D_DRAWAL_VOLTAGE_CODE" VARCHAR2(100 BYTE), 
	"CREATED_BY" VARCHAR2(100 BYTE), 
	"CREATED_DATE" DATE DEFAULT sysdate, 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y', 
	"UNIT_COST" VARCHAR2(100 BYTE), 
	"TOTAL_AMOUNT_PAYABLE" VARCHAR2(100 BYTE), 
	"TOTAL_AMOUNT_CHARGABLE" VARCHAR2(100 BYTE), 
	"NET_AMOUNT_PAYABLE" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table M_CHARGE_DEFN
--------------------------------------------------------

  CREATE TABLE "OPENACCESS"."M_CHARGE_DEFN" 
   (	"ID" VARCHAR2(50 BYTE), 
	"REMARKS" VARCHAR2(100 BYTE), 
	"CHARGE_CODE" VARCHAR2(50 BYTE), 
	"CHARGE_DESC" VARCHAR2(100 BYTE), 
	"CHARGE_TYPE_CODE" VARCHAR2(50 BYTE), 
	"UNIT_CHARGE" VARCHAR2(50 BYTE), 
	"FORMULA" VARCHAR2(100 BYTE), 
	"CREATED_DATE" DATE DEFAULT sysdate, 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_ENERGY_SALE
--------------------------------------------------------

  CREATE TABLE "OPENACCESS"."T_ENERGY_SALE" 
   (	"ID" VARCHAR2(50 BYTE), 
	"T_GEN_STMT_ID" VARCHAR2(50 BYTE), 
	"SELLER_COMP_SERV_ID" VARCHAR2(50 BYTE), 
	"SELLER_END_ORG_ID" VARCHAR2(50 BYTE), 
	"MONTH" VARCHAR2(50 BYTE), 
	"YEAR" VARCHAR2(50 BYTE), 
	"INJECTING_VOLTAGE_CODE" VARCHAR2(50 BYTE), 
	"FROM_DT" DATE, 
	"TO_DT" DATE, 
	"LOSS" VARCHAR2(50 BYTE), 
	"MULTIPLE_BUYERS" CHAR(1 BYTE), 
	"USAGE_DETAIL_AVAIL" CHAR(1 BYTE), 
	"SIMPLE_ENERGY_SALE" CHAR(1 BYTE), 
	"C1" VARCHAR2(50 BYTE), 
	"C2" VARCHAR2(50 BYTE), 
	"C3" VARCHAR2(50 BYTE), 
	"C4" VARCHAR2(50 BYTE), 
	"C5" VARCHAR2(50 BYTE), 
	"NET_GENERATION" VARCHAR2(50 BYTE), 
	"NET_ALLOCATION" VARCHAR2(50 BYTE), 
	"STATUS_CODE" VARCHAR2(100 BYTE), 
	"TOTAL_BANK_UNITS_USED" VARCHAR2(100 BYTE), 
	"BC1" VARCHAR2(100 BYTE), 
	"BC2" VARCHAR2(100 BYTE), 
	"BC3" VARCHAR2(100 BYTE), 
	"BC4" VARCHAR2(100 BYTE), 
	"BC5" VARCHAR2(100 BYTE), 
	"GC1" VARCHAR2(50 BYTE), 
	"GC2" VARCHAR2(50 BYTE), 
	"GC3" VARCHAR2(50 BYTE), 
	"GC4" VARCHAR2(50 BYTE), 
	"GC5" VARCHAR2(50 BYTE), 
	"IS_STB" CHAR(1 BYTE), 
	"AVAIL_C1" VARCHAR2(100 BYTE), 
	"AVAIL_C2" VARCHAR2(100 BYTE), 
	"AVAIL_C3" VARCHAR2(100 BYTE), 
	"AVAIL_C4" VARCHAR2(100 BYTE), 
	"AVAIL_C5" VARCHAR2(100 BYTE), 
	"AVAIL_GC1" VARCHAR2(100 BYTE), 
	"AVAIL_GC2" VARCHAR2(100 BYTE), 
	"AVAIL_GC3" VARCHAR2(100 BYTE), 
	"AVAIL_GC4" VARCHAR2(100 BYTE), 
	"AVAIL_GC5" VARCHAR2(100 BYTE), 
	"AVAIL_BC1" VARCHAR2(100 BYTE), 
	"AVAIL_BC2" VARCHAR2(100 BYTE), 
	"AVAIL_BC3" VARCHAR2(100 BYTE), 
	"AVAIL_BC4" VARCHAR2(100 BYTE), 
	"AVAIL_BC5" VARCHAR2(100 BYTE), 
	"CREATED_BY" VARCHAR2(100 BYTE), 
	"CREATED_DATE" DATE DEFAULT sysdate, 
	"M_SUBSTATION_ID" VARCHAR2(100 BYTE), 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y', 
	"NET_CHARGES_ALLOCATED" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_ES_CHARGE
--------------------------------------------------------

  CREATE TABLE "OPENACCESS"."T_ES_CHARGE" 
   (	"ID" VARCHAR2(50 BYTE), 
	"T_ENERGY_SALE_ID" VARCHAR2(50 BYTE), 
	"M_COMP_SERV_ID" VARCHAR2(50 BYTE), 
	"CHARGE_CODE" VARCHAR2(50 BYTE), 
	"TOTAL_CHARGE" VARCHAR2(50 BYTE), 
	"CREATED_BY" VARCHAR2(100 BYTE), 
	"CREATED_DATE" DATE DEFAULT sysdate, 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_ES_USAGE_SUMMARY
--------------------------------------------------------

  CREATE TABLE "OPENACCESS"."T_ES_USAGE_SUMMARY" 
   (	"ID" VARCHAR2(50 BYTE), 
	"T_ENERGY_SALE_ID" VARCHAR2(50 BYTE), 
	"BUYER_END_ORG_ID" VARCHAR2(50 BYTE), 
	"BUYER_END_SS_ID" VARCHAR2(50 BYTE), 
	"C1" VARCHAR2(50 BYTE), 
	"C2" VARCHAR2(50 BYTE), 
	"C3" VARCHAR2(50 BYTE), 
	"C4" VARCHAR2(50 BYTE), 
	"C5" VARCHAR2(50 BYTE), 
	"TOTAL" VARCHAR2(50 BYTE), 
	"BUYER_COMP_SERV_ID" VARCHAR2(50 BYTE), 
	"M_TRADE_RELATIONSHIP_ID" VARCHAR2(50 BYTE), 
	"CREATED_DATE" DATE DEFAULT sysdate, 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y', 
	"REMARKS" VARCHAR2(100 BYTE), 
	"UNIT_COST" VARCHAR2(100 BYTE), 
	"TOTAL_AMOUNT_PAYABLE" VARCHAR2(100 BYTE), 
	"TOTAL_AMOUNT_CHARGABLE" VARCHAR2(100 BYTE), 
	"NET_AMOUNT_PAYABLE" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_GEN_STMT
--------------------------------------------------------

  CREATE TABLE "OPENACCESS"."T_GEN_STMT" 
   (	"ID" VARCHAR2(50 BYTE), 
	"STATUS_CODE" VARCHAR2(50 BYTE), 
	"REMARKS" VARCHAR2(500 BYTE), 
	"M_COMPANY_METER_ID" VARCHAR2(50 BYTE), 
	"REF_NUMBER" VARCHAR2(100 BYTE), 
	"T_MR_IDS" VARCHAR2(100 BYTE), 
	"MF" VARCHAR2(50 BYTE), 
	"MACHINE_CAPACITY" VARCHAR2(50 BYTE), 
	"STMT_GEN_DATE" DATE, 
	"STMT_MONTH" VARCHAR2(50 BYTE), 
	"STMT_YEAR" VARCHAR2(50 BYTE), 
	"INIT_STMT_DT" DATE, 
	"FINAL_STMT_DT" DATE, 
	"RKVAH_INIT" VARCHAR2(50 BYTE), 
	"RKVAH_FINAL" VARCHAR2(50 BYTE), 
	"RKVAH_DIFF" VARCHAR2(50 BYTE), 
	"RKVAH_UNITS" VARCHAR2(50 BYTE), 
	"KVAH_INIT" VARCHAR2(50 BYTE), 
	"KVAH_FINAL" VARCHAR2(50 BYTE), 
	"KVAH_DIFF" VARCHAR2(50 BYTE), 
	"KVAH_UNITS" VARCHAR2(50 BYTE), 
	"TOTAL_IMPORT_GEN" VARCHAR2(50 BYTE), 
	"TOTAL_EXPORT_GEN" VARCHAR2(50 BYTE), 
	"M_ORG_ID" VARCHAR2(50 BYTE), 
	"M_COMPANY_ID" VARCHAR2(50 BYTE), 
	"M_COMPANY_SERVICE_ID" VARCHAR2(50 BYTE), 
	"DISP_COMPANY_NAME" VARCHAR2(100 BYTE), 
	"DISP_SERVICE_NUMBER" VARCHAR2(50 BYTE), 
	"INJECTING_VOLTAGE_CODE" VARCHAR2(50 BYTE), 
	"DISP_ORG_NAME" VARCHAR2(100 BYTE), 
	"POWER_FACTOR" VARCHAR2(50 BYTE), 
	"NET_GENERATION" VARCHAR2(50 BYTE), 
	"TOTAL_CHARGED_AMOUNT" VARCHAR2(50 BYTE), 
	"C1" VARCHAR2(50 BYTE), 
	"C2" VARCHAR2(50 BYTE), 
	"C3" VARCHAR2(50 BYTE), 
	"C4" VARCHAR2(50 BYTE), 
	"C5" VARCHAR2(50 BYTE), 
	"CREATED_BY" VARCHAR2(100 BYTE), 
	"CREATED_DT" DATE, 
	"MODIFIED_BY" VARCHAR2(100 BYTE), 
	"MODIFIED_DT" DATE, 
	"PENALTY_RATE" VARCHAR2(100 BYTE), 
	"COMMISSION_DATE" DATE, 
	"CREATED_DATE" DATE DEFAULT sysdate, 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y', 
	"FILE_NAME" VARCHAR2(50 BYTE), 
	"DISP_FUEL_TYPE_CODE" VARCHAR2(100 BYTE), 
	"DISP_FUEL_TYPE_NAME" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table T_GEN_STMT_CHARGE
--------------------------------------------------------

  CREATE TABLE "OPENACCESS"."T_GEN_STMT_CHARGE" 
   (	"ID" VARCHAR2(50 BYTE), 
	"REMARKS" VARCHAR2(100 BYTE), 
	"T_GEN_STMT_ID" VARCHAR2(50 BYTE), 
	"CHARGE_CODE" VARCHAR2(50 BYTE), 
	"CHARGE_DESC" VARCHAR2(100 BYTE), 
	"CHARGE_TYPE_CODE" VARCHAR2(50 BYTE), 
	"UNIT_CHARGE" VARCHAR2(50 BYTE), 
	"TOTAL_CHARGES" VARCHAR2(50 BYTE), 
	"CREATED_DATE" DATE DEFAULT sysdate, 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Sequence F_ENERGY_CHARGES_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "OPENACCESS"."F_ENERGY_CHARGES_SEQ"  MINVALUE 1 MAXVALUE 99999999999 INCREMENT BY 1 START WITH 562 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence F_ENERGY_LEDGER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "OPENACCESS"."F_ENERGY_LEDGER_SEQ"  MINVALUE 1 MAXVALUE 99999999999 INCREMENT BY 1 START WITH 380 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence F_ENERGY_SALE_ORDER_LINE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "OPENACCESS"."F_ENERGY_SALE_ORDER_LINE_SEQ"  MINVALUE 1 MAXVALUE 99999999999 INCREMENT BY 1 START WITH 301 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence F_ENERGY_SALE_ORDER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "OPENACCESS"."F_ENERGY_SALE_ORDER_SEQ"  MINVALUE 1 MAXVALUE 99999999999 INCREMENT BY 1 START WITH 301 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Function ENERGY_SALE_CONFIRMATION
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "OPENACCESS"."ENERGY_SALE_CONFIRMATION" 
(V_ES_ID VARCHAR2) RETURN VARCHAR2 
AS   
    V_SELLER_COMP_SERVICE V_COMPANY_SERVICE%ROWTYPE;
    V_BUYER_COMP_SERVICE V_COMPANY_SERVICE%ROWTYPE;
    V_ES T_ENERGY_SALE%ROWTYPE;
    V_ES_USAGESUMMARY T_ES_USAGE_SUMMARY%ROWTYPE;
    V_GS T_GEN_STMT%ROWTYPE;
    V_ES_ORDER F_ENERGY_SALE_ORDER%ROWTYPE;
    V_ES_ORDERLINE F_ENERGY_SALE_ORDER_LINES%ROWTYPE;
    V_ES_ORDERLINE_LEDGER F_ENERGY_SALE_ORDER_LINES%ROWTYPE;
    V_ENERGY_CHARGE F_ENERGY_CHARGES%ROWTYPE;
    V_GEN_STMT_ENERGY_CHARGE F_ENERGY_CHARGES%ROWTYPE;
    V_ES_CHARGE T_ES_CHARGE%ROWTYPE;
    V_GS_CHARGE T_GEN_STMT_CHARGE%ROWTYPE;
    V_RESULT VARCHAR(300):='SUCCESS';
    V_REASON VARCHAR2(200); 
    V_EXCEPTION_CODE VARCHAR2(150);
    V_EXCEPTION_MSG  VARCHAR2(150);
    V_ES_USAGESUMMARY_CURSOR sys_refcursor ;
    V_ES_ORDERLINE_CURSOR sys_refcursor ;
    V_GC_CHARGE_CURSOR sys_refcursor ;
    V_ES_CHARGE_CURSOR sys_refcursor ;
    CHARGE_COMP_SERVICE_ID VARCHAR2(200); 
    CHARGE_CODE VARCHAR2(200); 
    CHARGE_DESC VARCHAR2(200); 
    TOTAL_CHARGE VARCHAR2(200); 
    V_ENERGY_LEDGER F_ENERGY_LEDGER%ROWTYPE;
    V_ENERGY_LEDGER_BANK F_ENERGY_LEDGER%ROWTYPE;
    V_ENERGY_LEDGER_BUYER F_ENERGY_LEDGER%ROWTYPE;
    V_ENERGY_LEDGER_SELLER_TL F_ENERGY_LEDGER%ROWTYPE;
    V_ENERGY_LEDGER_SELLER_DL F_ENERGY_LEDGER%ROWTYPE;
    V_LOSS_CAL_BUYER_TRANS VARCHAR2(200);
    V_LOSS_CAL_BUYER_DIST VARCHAR2(200);
    V_LOSS_CAL_BUYER_TOTAL VARCHAR2(200); 
    V_LOSS_CAL_BUYER_DRAWAL1 VARCHAR2(200); 
    V_LOSS_CAL_BUYER_DRAWAL2 VARCHAR2(200); 
    V_LOSS_CAL_BUYER_DRAWAL3 VARCHAR2(200); 
    V_LOSS_CAL_BUYER_DRAWAL4 VARCHAR2(200); 
    V_LOSS_CAL_BUYER_DRAWAL5 VARCHAR2(200); 
    V_LOSS_CAL_BUYER_DRAWALOUT VARCHAR2(200); 

    V_LOSS_CAL_SELLER_TL_TOTAL VARCHAR2(200); 
    V_LOSS_CAL_SELLER_TL_DRAWAL VARCHAR2(200); 
    V_LOSS_CAL_SELLER_TL_DIST VARCHAR2(200);
    V_LOSS_CAL_SELLER_TL_TRANS1 VARCHAR2(200);   
    V_LOSS_CAL_SELLER_TL_TRANS2 VARCHAR2(200); 
    V_LOSS_CAL_SELLER_TL_TRANS3 VARCHAR2(200); 
    V_LOSS_CAL_SELLER_TL_TRANS4 VARCHAR2(200); 
    V_LOSS_CAL_SELLER_TL_TRANS5 VARCHAR2(200); 
    V_LOSS_CAL_SELLER_TL_TRANSOUT VARCHAR2(200); 

    V_LOSS_CAL_SELLER_DL_TOTAL VARCHAR2(200); 
    V_LOSS_CAL_SELLER_DL_DRAWAL VARCHAR2(200); 
    V_LOSS_CAL_SELLER_DL_TRANS VARCHAR2(200);
    V_LOSS_CAL_SELLER_DL_DIST1 VARCHAR2(200);
    V_LOSS_CAL_SELLER_DL_DIST2 VARCHAR2(200); 
    V_LOSS_CAL_SELLER_DL_DIST3 VARCHAR2(200); 
    V_LOSS_CAL_SELLER_DL_DIST4 VARCHAR2(200); 
    V_LOSS_CAL_SELLER_DL_DIST5 VARCHAR2(200); 
    V_LOSS_CAL_SELLER_DL_DISTOUT VARCHAR2(200); 




BEGIN  
   BEGIN
     SELECT * INTO V_ES FROM T_ENERGY_SALE WHERE ID = V_ES_ID;
       DBMS_OUTPUT.PUT_LINE(V_ES.STATUS_CODE);

       IF V_ES.STATUS_CODE='CREATED' AND V_ES.STATUS_CODE!='APPROVED' THEN
         SELECT * INTO V_SELLER_COMP_SERVICE FROM V_COMPANY_SERVICE WHERE ID=V_ES.SELLER_COMP_SERV_ID;


         SELECT V_ES.ID,V_ES.SELLER_COMP_SERV_ID,V_ES.SELLER_END_ORG_ID,V_ES.MONTH,V_ES.YEAR,V_ES.INJECTING_VOLTAGE_CODE,V_ES.FROM_DT,V_ES.TO_DT,V_ES.LOSS,
         V_ES.MULTIPLE_BUYERS,V_ES.USAGE_DETAIL_AVAIL,V_ES.SIMPLE_ENERGY_SALE,V_ES.C1,V_ES.C2,V_ES.C3,V_ES.C4,V_ES.C5,V_ES.NET_GENERATION,V_ES.BC1,V_ES.BC2,V_ES.BC3,V_ES.BC4,V_ES.BC5,V_ES.TOTAL_BANK_UNITS_USED,V_ES.NET_ALLOCATION,
         V_SELLER_COMP_SERVICE.M_COMPANY_NAME,V_SELLER_COMP_SERVICE.M_COMPANY_CODE,V_SELLER_COMP_SERVICE."number",V_SELLER_COMP_SERVICE.M_ORG_NAME,V_SELLER_COMP_SERVICE.M_ORG_CODE,V_ES.GC1,V_ES.GC2,V_ES.GC3,V_ES.GC4,V_ES.GC5,V_SELLER_COMP_SERVICE.BANKING_SERVICE_ID,V_SELLER_COMP_SERVICE.BANKING_SERVICE_NUMBER,V_SELLER_COMP_SERVICE.M_COMPANY_ID INTO 
         V_ES_ORDER.T_ENERGY_SALE_ID,V_ES_ORDER.SELLER_COMP_SERV_ID,V_ES_ORDER.SELLER_END_ORG_ID,V_ES_ORDER.MONTH,V_ES_ORDER.YEAR,V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDER.FROM_DT,V_ES_ORDER.TO_DT,V_ES_ORDER.LOSS,
         V_ES_ORDER.MULTIPLE_BUYERS,V_ES_ORDER.USAGE_DETAIL_AVAIL,V_ES_ORDER.SIMPLE_ENERGY_SALE,V_ES_ORDER.TOTAL_C1,V_ES_ORDER.TOTAL_C2,V_ES_ORDER.TOTAL_C3,V_ES_ORDER.TOTAL_C4,V_ES_ORDER.TOTAL_C5,V_ES_ORDER.TOTAL_GEN_UNITS_SOLD,V_ES_ORDER.TOTAL_BC1,V_ES_ORDER.TOTAL_BC2,V_ES_ORDER.TOTAL_BC3,V_ES_ORDER.TOTAL_BC4,V_ES_ORDER.TOTAL_BC5,V_ES_ORDER.TOTAL_BANKING_UNITS_SOLD,V_ES_ORDER.TOTAL_UNITS_SOLD,
         V_ES_ORDER.D_SELL_COMP_NAME,V_ES_ORDER.D_SELL_COMP_CODE,V_ES_ORDER.D_SELL_COMP_SERV_NUMBER,V_ES_ORDER.D_SELL_ORG_NAME,V_ES_ORDER.D_SELL_ORG_CODE,V_ES_ORDER.TOTAL_GC1,V_ES_ORDER.TOTAL_GC2,V_ES_ORDER.TOTAL_GC3,V_ES_ORDER.TOTAL_GC4,V_ES_ORDER.TOTAL_GC5,V_ES_ORDER.BANKING_SERVICE_ID,V_ES_ORDER.BANKING_SERVICE_NUMBER,V_ES_ORDER.SELLER_COMP_ID 
         FROM DUAL;

         V_ES_ORDER.ID := F_ENERGY_SALE_ORDER_SEQ.NEXTVAL;    
         INSERT INTO OPENACCESS.F_ENERGY_SALE_ORDER VALUES V_ES_ORDER;  

            OPEN V_ES_USAGESUMMARY_CURSOR for SELECT * FROM T_ES_USAGE_SUMMARY WHERE T_ENERGY_SALE_ID = V_ES_ID;

            LOOP
            FETCH V_ES_USAGESUMMARY_CURSOR INTO V_ES_USAGESUMMARY;

            SELECT * INTO V_BUYER_COMP_SERVICE FROM V_COMPANY_SERVICE WHERE ID=V_ES_USAGESUMMARY.BUYER_COMP_SERV_ID;

            EXIT WHEN V_ES_USAGESUMMARY_CURSOR%NOTFOUND;

            V_ES_ORDERLINE.ID := F_ENERGY_SALE_ORDER_LINE_SEQ.NEXTVAL;  
             DBMS_OUTPUT.PUT_LINE('V_ES_ORDERLINE'||V_ES_ORDERLINE.ID);
           SELECT V_ES_ID,V_ES_ORDER.ID,V_ES_USAGESUMMARY.BUYER_END_ORG_ID,V_BUYER_COMP_SERVICE.M_SUBSTATION_ID,V_ES_USAGESUMMARY.BUYER_COMP_SERV_ID,V_ES_USAGESUMMARY.C1,V_ES_USAGESUMMARY.C2,V_ES_USAGESUMMARY.C3,V_ES_USAGESUMMARY.C4,V_ES_USAGESUMMARY.C5,V_ES_USAGESUMMARY.TOTAL,V_BUYER_COMP_SERVICE.M_COMPANY_NAME,V_BUYER_COMP_SERVICE.M_COMPANY_CODE,
            V_BUYER_COMP_SERVICE."number",V_BUYER_COMP_SERVICE.M_ORG_NAME,V_BUYER_COMP_SERVICE.M_ORG_CODE,V_BUYER_COMP_SERVICE.M_SUBSTATION_NAME,V_BUYER_COMP_SERVICE.M_COMPANY_ID,V_BUYER_COMP_SERVICE.VOLTAGE_CODE,V_ES_USAGESUMMARY.UNIT_COST,V_ES_USAGESUMMARY.TOTAL_AMOUNT_PAYABLE,V_ES_USAGESUMMARY.TOTAL_AMOUNT_CHARGABLE,V_ES_USAGESUMMARY.NET_AMOUNT_PAYABLE INTO 
            V_ES_ORDERLINE.T_ENERGY_SALE_ID,V_ES_ORDERLINE.F_ENERGY_SALE_ORDER_ID,V_ES_ORDERLINE.BUYER_END_ORG_ID,V_ES_ORDERLINE.BUYER_END_SS_ID,V_ES_ORDERLINE.BUYER_COMP_SERV_ID,
            V_ES_ORDERLINE.C1,V_ES_ORDERLINE.C2,V_ES_ORDERLINE.C3,V_ES_ORDERLINE.C4,V_ES_ORDERLINE.C5,V_ES_ORDERLINE.TOTAL_UNITS_SOLD,V_ES_ORDERLINE.D_BUYER_COMP_NAME,V_ES_ORDERLINE.D_BUYER_COMP_CODE,V_ES_ORDERLINE.D_BUYER_COMP_SERV_NAME,V_ES_ORDERLINE.D_BUYER_ORG_NAME,V_ES_ORDERLINE.D_BUYER_ORG_CODE,V_ES_ORDERLINE.D_BUYER_SS_NAME,V_ES_ORDERLINE.BUYER_COMP_ID,V_ES_ORDERLINE.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE.UNIT_COST,V_ES_ORDERLINE.TOTAL_AMOUNT_PAYABLE,V_ES_ORDERLINE.TOTAL_AMOUNT_CHARGABLE,V_ES_ORDERLINE.NET_AMOUNT_PAYABLE FROM DUAL;         

            IF V_ES.IS_STB='Y' THEN
              V_ES_ORDERLINE.D_DRAWAL_VOLTAGE_CODE := V_ES_ORDER.INJECTING_VOLTAGE_CODE;
            END IF;

           INSERT INTO F_ENERGY_SALE_ORDER_LINES VALUES V_ES_ORDERLINE;  

            END LOOP;


            OPEN V_ES_CHARGE_CURSOR for SELECT ESCHARGE.M_COMP_SERV_ID,ESCHARGE.CHARGE_CODE,ESCHARGE.TOTAL_CHARGE,CHARGEDEFN.CHARGE_DESC FROM T_ES_CHARGE ESCHARGE  LEFT JOIN M_CHARGE_DEFN CHARGEDEFN ON ESCHARGE.CHARGE_CODE = CHARGEDEFN.CHARGE_CODE WHERE T_ENERGY_SALE_ID = V_ES_ID;

            LOOP
             FETCH V_ES_CHARGE_CURSOR INTO CHARGE_COMP_SERVICE_ID,CHARGE_CODE,TOTAL_CHARGE,CHARGE_DESC;
             EXIT WHEN V_ES_CHARGE_CURSOR%NOTFOUND;
             V_ENERGY_CHARGE.ID := F_ENERGY_CHARGES_SEQ.NEXTVAL;  
             SELECT CHARGE_COMP_SERVICE_ID,CHARGE_CODE,TOTAL_CHARGE,CHARGE_DESC,V_ES_ORDER.ID INTO
             V_ENERGY_CHARGE.M_COMPANY_SERVICE_ID,V_ENERGY_CHARGE.CHARGE_CODE,V_ENERGY_CHARGE.TOTAL_CHARGES,V_ENERGY_CHARGE.CHARGE_DESC,V_ENERGY_CHARGE.F_ENERGY_SALE_ORDER_ID FROM DUAL;
             INSERT INTO F_ENERGY_CHARGES VALUES V_ENERGY_CHARGE;  
             END LOOP;





              SELECT V_ES_ORDER.SELLER_END_ORG_ID,V_ES_ORDER.SELLER_COMP_ID,V_ES_ORDER.SELLER_COMP_SERV_ID,V_ES_ORDER.MONTH,V_ES_ORDER.YEAR,V_ES_ORDER.FROM_DT,V_ES_ORDER.TO_DT,V_ES_ORDER.TOTAL_GC1,
            V_ES_ORDER.TOTAL_GC2,V_ES_ORDER.TOTAL_GC3,V_ES_ORDER.TOTAL_GC4,V_ES_ORDER.TOTAL_GC5,V_ES_ORDER.TOTAL_GEN_UNITS_SOLD,V_ES_ORDER.ID,V_ES_ORDER.D_SELL_COMP_NAME,V_ES_ORDER.D_SELL_COMP_CODE,V_ES_ORDER.D_SELL_COMP_SERV_NUMBER,V_ES_ORDER.D_SELL_ORG_NAME,V_ES_ORDER.D_SELL_ORG_CODE INTO
            V_ENERGY_LEDGER.M_ORG_ID,V_ENERGY_LEDGER.M_COMPANY_ID,V_ENERGY_LEDGER.M_COMPANY_SERVICE_ID,V_ENERGY_LEDGER.MONTH,V_ENERGY_LEDGER.YEAR,V_ENERGY_LEDGER.FROM_DT,V_ENERGY_LEDGER.TO_DT,V_ENERGY_LEDGER.C1,
            V_ENERGY_LEDGER.C2,V_ENERGY_LEDGER.C3,V_ENERGY_LEDGER.C4,V_ENERGY_LEDGER.C5,V_ENERGY_LEDGER.ENERGY_IN,V_ENERGY_LEDGER.F_ENERGY_SALE_ORDER_ID,V_ENERGY_LEDGER.D_COMP_NAME,V_ENERGY_LEDGER.D_COMP_CODE,V_ENERGY_LEDGER.D_COMP_SERV_NUMBER,V_ENERGY_LEDGER.D_ORG_NAME,V_ENERGY_LEDGER.D_ORG_CODE FROM DUAL;

            V_ENERGY_LEDGER.LEDGER_DATE:= SYSDATE;
            V_ENERGY_LEDGER.SERVICE_TYPE_CODE:= '03';

            V_ENERGY_LEDGER.ID:=F_ENERGY_LEDGER_SEQ.NEXTVAL;
            INSERT INTO F_ENERGY_LEDGER VALUES V_ENERGY_LEDGER;

            IF V_ES.TOTAL_BANK_UNITS_USED!=NULL AND V_ES.TOTAL_BANK_UNITS_USED>0 THEN

                SELECT V_ES_ORDER.SELLER_END_ORG_ID,V_ES_ORDER.SELLER_COMP_ID,V_ES_ORDER.SELLER_COMP_SERV_ID,V_ES_ORDER.MONTH,V_ES_ORDER.YEAR,V_ES_ORDER.FROM_DT,V_ES_ORDER.TO_DT,V_ES_ORDER.TOTAL_GC1,
                V_ES_ORDER.TOTAL_GC2,V_ES_ORDER.TOTAL_GC3,V_ES_ORDER.TOTAL_GC4,V_ES_ORDER.TOTAL_GC5,V_ES_ORDER.TOTAL_BANKING_UNITS_SOLD,V_ES_ORDER.ID,V_ES_ORDER.D_SELL_COMP_NAME,V_ES_ORDER.D_SELL_COMP_CODE,V_ES_ORDER.D_SELL_COMP_SERV_NUMBER,V_ES_ORDER.D_SELL_ORG_NAME,V_ES_ORDER.D_SELL_ORG_CODE INTO
                V_ENERGY_LEDGER_BANK.M_ORG_ID,V_ENERGY_LEDGER_BANK.M_COMPANY_ID,V_ENERGY_LEDGER_BANK.M_COMPANY_SERVICE_ID,V_ENERGY_LEDGER_BANK.MONTH,V_ENERGY_LEDGER_BANK.YEAR,V_ENERGY_LEDGER_BANK.FROM_DT,V_ENERGY_LEDGER_BANK.TO_DT,V_ENERGY_LEDGER_BANK.C1,
                V_ENERGY_LEDGER_BANK.C2,V_ENERGY_LEDGER_BANK.C3,V_ENERGY_LEDGER_BANK.C4,V_ENERGY_LEDGER_BANK.C5,V_ENERGY_LEDGER_BANK.ENERGY_IN,V_ENERGY_LEDGER_BANK.F_ENERGY_SALE_ORDER_ID,V_ENERGY_LEDGER_BANK.D_COMP_NAME,V_ENERGY_LEDGER_BANK.D_COMP_CODE,V_ENERGY_LEDGER_BANK.D_COMP_SERV_NUMBER,V_ENERGY_LEDGER_BANK.D_ORG_NAME,V_ENERGY_LEDGER_BANK.D_ORG_CODE FROM DUAL;

                V_ENERGY_LEDGER_BANK.LEDGER_DATE:= SYSDATE;
                V_ENERGY_LEDGER_BANK.SERVICE_TYPE_CODE:= '01';



                V_ENERGY_LEDGER_BANK.ID:=F_ENERGY_LEDGER_SEQ.NEXTVAL;
                INSERT INTO F_ENERGY_LEDGER VALUES V_ENERGY_LEDGER_BANK;

            END IF;


--            OPEN V_ES_ORDERLINE_CURSOR for SELECT * FROM F_ENERGY_SALE_ORDER_LINES WHERE F_ENERGY_SALE_ORDER_ID = '69';
            OPEN V_ES_ORDERLINE_CURSOR for SELECT * FROM F_ENERGY_SALE_ORDER_LINES WHERE T_ENERGY_SALE_ID = V_ES_ID;

            LOOP
            FETCH V_ES_ORDERLINE_CURSOR INTO V_ES_ORDERLINE_LEDGER;

            EXIT WHEN V_ES_ORDERLINE_CURSOR%NOTFOUND;



            V_ENERGY_LEDGER_BUYER.LEDGER_DATE:= SYSDATE;
            V_ENERGY_LEDGER_BUYER.SERVICE_TYPE_CODE:= '02';

            V_LOSS_CAL_BUYER_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C1,V_LOSS_CAL_BUYER_TRANS,V_LOSS_CAL_BUYER_DIST,V_LOSS_CAL_BUYER_TOTAL,V_LOSS_CAL_BUYER_DRAWAL1);
            V_LOSS_CAL_BUYER_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C2,V_LOSS_CAL_BUYER_TRANS,V_LOSS_CAL_BUYER_DIST,V_LOSS_CAL_BUYER_TOTAL,V_LOSS_CAL_BUYER_DRAWAL2);
            V_LOSS_CAL_BUYER_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C3,V_LOSS_CAL_BUYER_TRANS,V_LOSS_CAL_BUYER_DIST,V_LOSS_CAL_BUYER_TOTAL,V_LOSS_CAL_BUYER_DRAWAL3);
            V_LOSS_CAL_BUYER_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C4,V_LOSS_CAL_BUYER_TRANS,V_LOSS_CAL_BUYER_DIST,V_LOSS_CAL_BUYER_TOTAL,V_LOSS_CAL_BUYER_DRAWAL4);
            V_LOSS_CAL_BUYER_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C5,V_LOSS_CAL_BUYER_TRANS,V_LOSS_CAL_BUYER_DIST,V_LOSS_CAL_BUYER_TOTAL,V_LOSS_CAL_BUYER_DRAWAL5);
            V_LOSS_CAL_BUYER_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.TOTAL_UNITS_SOLD,V_LOSS_CAL_BUYER_TRANS,V_LOSS_CAL_BUYER_DIST,V_LOSS_CAL_BUYER_TOTAL,V_LOSS_CAL_BUYER_DRAWALOUT);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_TOTAL'||V_LOSS_CAL_BUYER_TOTAL);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_DIST'||V_LOSS_CAL_BUYER_DIST);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_TRANS'||V_LOSS_CAL_BUYER_TRANS);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_DRAWAL'||V_LOSS_CAL_BUYER_DRAWAL1||'-------'||V_LOSS_CAL_BUYER_DRAWAL2||'-------'||V_LOSS_CAL_BUYER_DRAWAL3||'-------'||V_LOSS_CAL_BUYER_DRAWAL4||'-------'||V_LOSS_CAL_BUYER_DRAWAL5||'-------'||V_LOSS_CAL_BUYER_DRAWALIN);
          SELECT V_ES_ORDERLINE_LEDGER.BUYER_END_ORG_ID,V_ES_ORDERLINE_LEDGER.BUYER_COMP_ID,V_ES_ORDERLINE_LEDGER.BUYER_COMP_SERV_ID,V_ES_ORDER.MONTH,V_ES_ORDER.YEAR,V_ES_ORDER.FROM_DT,V_ES_ORDER.TO_DT,
            V_LOSS_CAL_BUYER_DRAWAL1,V_LOSS_CAL_BUYER_DRAWAL2,V_LOSS_CAL_BUYER_DRAWAL3,V_LOSS_CAL_BUYER_DRAWAL4,V_LOSS_CAL_BUYER_DRAWAL5,V_LOSS_CAL_BUYER_DRAWALOUT,V_ES_ORDER.ID,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_CODE,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_SERV_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_ORG_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_ORG_CODE,V_ES_ORDERLINE_LEDGER.ID  INTO 
            V_ENERGY_LEDGER_BUYER.M_ORG_ID,V_ENERGY_LEDGER_BUYER.M_COMPANY_ID,V_ENERGY_LEDGER_BUYER.M_COMPANY_SERVICE_ID,V_ENERGY_LEDGER_BUYER.MONTH,V_ENERGY_LEDGER_BUYER.YEAR,V_ENERGY_LEDGER_BUYER.FROM_DT,V_ENERGY_LEDGER_BUYER.TO_DT,V_ENERGY_LEDGER_BUYER.C1,
            V_ENERGY_LEDGER_BUYER.C2,V_ENERGY_LEDGER_BUYER.C3,V_ENERGY_LEDGER_BUYER.C4,V_ENERGY_LEDGER_BUYER.C5,V_ENERGY_LEDGER_BUYER.ENERGY_OUT,V_ENERGY_LEDGER_BUYER.F_ENERGY_SALE_ORDER_ID,V_ENERGY_LEDGER_BUYER.D_COMP_NAME,V_ENERGY_LEDGER_BUYER.D_COMP_CODE,V_ENERGY_LEDGER_BUYER.D_COMP_SERV_NUMBER,V_ENERGY_LEDGER_BUYER.D_ORG_NAME,V_ENERGY_LEDGER_BUYER.D_ORG_CODE,V_ENERGY_LEDGER_BUYER.F_ENERGY_SALE_ORDER_LINES_ID FROM DUAL;


            V_ENERGY_LEDGER_BUYER.ID:=F_ENERGY_LEDGER_SEQ.NEXTVAL;
            INSERT INTO F_ENERGY_LEDGER VALUES V_ENERGY_LEDGER_BUYER;


             V_ENERGY_LEDGER_SELLER_TL.LEDGER_DATE:= SYSDATE;
            V_ENERGY_LEDGER_SELLER_TL.SERVICE_TYPE_CODE:= '04';

            V_LOSS_CAL_SELLER_TL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C1,V_LOSS_CAL_SELLER_TL_TRANS1,V_LOSS_CAL_SELLER_TL_DIST,V_LOSS_CAL_SELLER_TL_TOTAL,V_LOSS_CAL_SELLER_TL_DRAWAL);
            V_LOSS_CAL_SELLER_TL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C2,V_LOSS_CAL_SELLER_TL_TRANS2,V_LOSS_CAL_SELLER_TL_DIST,V_LOSS_CAL_SELLER_TL_TOTAL,V_LOSS_CAL_SELLER_TL_DRAWAL);
            V_LOSS_CAL_SELLER_TL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C3,V_LOSS_CAL_SELLER_TL_TRANS3,V_LOSS_CAL_SELLER_TL_DIST,V_LOSS_CAL_SELLER_TL_TOTAL,V_LOSS_CAL_SELLER_TL_DRAWAL);
            V_LOSS_CAL_SELLER_TL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C4,V_LOSS_CAL_SELLER_TL_TRANS4,V_LOSS_CAL_SELLER_TL_DIST,V_LOSS_CAL_SELLER_TL_TOTAL,V_LOSS_CAL_SELLER_TL_DRAWAL);
            V_LOSS_CAL_SELLER_TL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C5,V_LOSS_CAL_SELLER_TL_TRANS5,V_LOSS_CAL_SELLER_TL_DIST,V_LOSS_CAL_SELLER_TL_TOTAL,V_LOSS_CAL_SELLER_TL_DRAWAL);
            V_LOSS_CAL_SELLER_TL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.GEN_UNITS_SOLD,V_LOSS_CAL_SELLER_TL_TRANSOUT,V_LOSS_CAL_SELLER_TL_DIST,V_LOSS_CAL_SELLER_TL_TOTAL,V_LOSS_CAL_SELLER_TL_DRAWAL);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_TOTAL'||V_LOSS_CAL_SELLER_TL_TOTAL);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_DIST'||V_LOSS_CAL_SELLER_TL_DIST);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_TRANS'||V_LOSS_CAL_SELLER_TL_TRANS);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_DRAWAL'||V_LOSS_CAL_SELLER_TL_DRAWAL1||'-------'||V_LOSS_CAL_SELLER_TL_DRAWAL2||'-------'||V_LOSS_CAL_SELLER_TL_DRAWAL3||'-------'||V_LOSS_CAL_SELLER_TL_DRAWAL4||'-------'||V_LOSS_CAL_SELLER_TL_DRAWAL5||'-------'||V_LOSS_CAL_SELLER_TL_DRAWALIN);
            SELECT V_ES_ORDERLINE_LEDGER.BUYER_END_ORG_ID,V_ES_ORDERLINE_LEDGER.BUYER_COMP_ID,V_ES_ORDERLINE_LEDGER.BUYER_COMP_SERV_ID,V_ES_ORDER.MONTH,V_ES_ORDER.YEAR,V_ES_ORDER.FROM_DT,V_ES_ORDER.TO_DT,
            V_LOSS_CAL_SELLER_TL_TRANS1,V_LOSS_CAL_SELLER_TL_TRANS2,V_LOSS_CAL_SELLER_TL_TRANS3,V_LOSS_CAL_SELLER_TL_TRANS4,V_LOSS_CAL_SELLER_TL_TRANS5,V_LOSS_CAL_SELLER_TL_TRANSOUT,V_ES_ORDER.ID,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_CODE,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_SERV_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_ORG_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_ORG_CODE,V_ES_ORDERLINE_LEDGER.ID  INTO 
           V_ENERGY_LEDGER_SELLER_TL.M_ORG_ID,V_ENERGY_LEDGER_SELLER_TL.M_COMPANY_ID,V_ENERGY_LEDGER_SELLER_TL.M_COMPANY_SERVICE_ID,V_ENERGY_LEDGER_SELLER_TL.MONTH,V_ENERGY_LEDGER_SELLER_TL.YEAR,V_ENERGY_LEDGER_SELLER_TL.FROM_DT,V_ENERGY_LEDGER_SELLER_TL.TO_DT,V_ENERGY_LEDGER_SELLER_TL.C1,
            V_ENERGY_LEDGER_SELLER_TL.C2,V_ENERGY_LEDGER_SELLER_TL.C3,V_ENERGY_LEDGER_SELLER_TL.C4,V_ENERGY_LEDGER_SELLER_TL.C5,V_ENERGY_LEDGER_SELLER_TL.ENERGY_OUT,V_ENERGY_LEDGER_SELLER_TL.F_ENERGY_SALE_ORDER_ID,V_ENERGY_LEDGER_SELLER_TL.D_COMP_NAME,V_ENERGY_LEDGER_SELLER_TL.D_COMP_CODE,V_ENERGY_LEDGER_SELLER_TL.D_COMP_SERV_NUMBER,V_ENERGY_LEDGER_SELLER_TL.D_ORG_NAME,V_ENERGY_LEDGER_SELLER_TL.D_ORG_CODE,V_ENERGY_LEDGER_SELLER_TL.F_ENERGY_SALE_ORDER_LINES_ID FROM DUAL;

            V_ENERGY_LEDGER_SELLER_TL.ID:=F_ENERGY_LEDGER_SEQ.NEXTVAL;
            INSERT INTO F_ENERGY_LEDGER VALUES V_ENERGY_LEDGER_SELLER_TL;




            V_ENERGY_LEDGER_SELLER_DL.LEDGER_DATE:= SYSDATE;
            V_ENERGY_LEDGER_SELLER_DL.SERVICE_TYPE_CODE:= '05';

            V_LOSS_CAL_SELLER_DL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C1,V_LOSS_CAL_SELLER_DL_TRANS,V_LOSS_CAL_SELLER_DL_DIST1,V_LOSS_CAL_SELLER_DL_TOTAL,V_LOSS_CAL_SELLER_DL_DRAWAL);
            V_LOSS_CAL_SELLER_DL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C2,V_LOSS_CAL_SELLER_DL_TRANS,V_LOSS_CAL_SELLER_DL_DIST2,V_LOSS_CAL_SELLER_DL_TOTAL,V_LOSS_CAL_SELLER_DL_DRAWAL);
            V_LOSS_CAL_SELLER_DL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C3,V_LOSS_CAL_SELLER_DL_TRANS,V_LOSS_CAL_SELLER_DL_DIST3,V_LOSS_CAL_SELLER_DL_TOTAL,V_LOSS_CAL_SELLER_DL_DRAWAL);
            V_LOSS_CAL_SELLER_DL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C4,V_LOSS_CAL_SELLER_DL_TRANS,V_LOSS_CAL_SELLER_DL_DIST4,V_LOSS_CAL_SELLER_DL_TOTAL,V_LOSS_CAL_SELLER_DL_DRAWAL);
            V_LOSS_CAL_SELLER_DL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.C5,V_LOSS_CAL_SELLER_DL_TRANS,V_LOSS_CAL_SELLER_DL_DIST5,V_LOSS_CAL_SELLER_DL_TOTAL,V_LOSS_CAL_SELLER_DL_DRAWAL);
            V_LOSS_CAL_SELLER_DL_TOTAL :=LOSS_CALCULATION(V_ES_ORDER.INJECTING_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.D_DRAWAL_VOLTAGE_CODE,V_ES_ORDERLINE_LEDGER.GEN_UNITS_SOLD,V_LOSS_CAL_SELLER_DL_TRANS,V_LOSS_CAL_SELLER_DL_DISTOUT,V_LOSS_CAL_SELLER_DL_TOTAL,V_LOSS_CAL_SELLER_DL_DRAWAL);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_TOTAL'||V_LOSS_CAL_SELLER_DL_TOTAL);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_DIST'||V_LOSS_CAL_SELLER_DL_DIST);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_TRANS'||V_LOSS_CAL_SELLER_DL_TRANS);
--           DBMS_OUTPUT.PUT_LINE('V_LOSS_CALCULATION_DRAWAL'||V_LOSS_CAL_SELLER_DL_DRAWAL1||'-------'||V_LOSS_CAL_SELLER_DL_DRAWAL2||'-------'||V_LOSS_CAL_SELLER_DL_DRAWAL3||'-------'||V_LOSS_CAL_SELLER_DL_DRAWAL4||'-------'||V_LOSS_CAL_SELLER_DL_DRAWAL5||'-------'||V_LOSS_CAL_SELLER_DL_DRAWALIN);
            SELECT V_ES_ORDERLINE_LEDGER.BUYER_END_ORG_ID,V_ES_ORDERLINE_LEDGER.BUYER_COMP_ID,V_ES_ORDERLINE_LEDGER.BUYER_COMP_SERV_ID,V_ES_ORDER.MONTH,V_ES_ORDER.YEAR,V_ES_ORDER.FROM_DT,V_ES_ORDER.TO_DT,
            V_LOSS_CAL_SELLER_DL_DIST1,V_LOSS_CAL_SELLER_DL_DIST2,V_LOSS_CAL_SELLER_DL_DIST3,V_LOSS_CAL_SELLER_DL_DIST4,V_LOSS_CAL_SELLER_DL_DIST5,V_LOSS_CAL_SELLER_DL_DISTOUT,V_ES_ORDER.ID,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_CODE,V_ES_ORDERLINE_LEDGER.D_BUYER_COMP_SERV_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_ORG_NAME,V_ES_ORDERLINE_LEDGER.D_BUYER_ORG_CODE,V_ES_ORDERLINE_LEDGER.ID  INTO 
           V_ENERGY_LEDGER_SELLER_DL.M_ORG_ID,V_ENERGY_LEDGER_SELLER_DL.M_COMPANY_ID,V_ENERGY_LEDGER_SELLER_DL.M_COMPANY_SERVICE_ID,V_ENERGY_LEDGER_SELLER_DL.MONTH,V_ENERGY_LEDGER_SELLER_DL.YEAR,V_ENERGY_LEDGER_SELLER_DL.FROM_DT,V_ENERGY_LEDGER_SELLER_DL.TO_DT,V_ENERGY_LEDGER_SELLER_DL.C1,
            V_ENERGY_LEDGER_SELLER_DL.C2,V_ENERGY_LEDGER_SELLER_DL.C3,V_ENERGY_LEDGER_SELLER_DL.C4,V_ENERGY_LEDGER_SELLER_DL.C5,V_ENERGY_LEDGER_SELLER_DL.ENERGY_OUT,V_ENERGY_LEDGER_SELLER_DL.F_ENERGY_SALE_ORDER_ID,V_ENERGY_LEDGER_SELLER_DL.D_COMP_NAME,V_ENERGY_LEDGER_SELLER_DL.D_COMP_CODE,V_ENERGY_LEDGER_SELLER_DL.D_COMP_SERV_NUMBER,V_ENERGY_LEDGER_SELLER_DL.D_ORG_NAME,V_ENERGY_LEDGER_SELLER_DL.D_ORG_CODE,V_ENERGY_LEDGER_SELLER_DL.F_ENERGY_SALE_ORDER_LINES_ID FROM DUAL;

            V_ENERGY_LEDGER_SELLER_DL.ID:=F_ENERGY_LEDGER_SEQ.NEXTVAL;
            INSERT INTO F_ENERGY_LEDGER VALUES V_ENERGY_LEDGER_SELLER_DL;

            END LOOP;


           UPDATE T_ENERGY_SALE SET STATUS_CODE='APPROVED' WHERE ID=V_ES_ID;

       ELSE 
        V_REASON    := 'CANNOT UPDATE ALREADY APPROVED ENERGY SALE';
        V_RESULT    := 'FAILURE';
        GOTO THE_END;
       END IF;




      EXCEPTION
              WHEN OTHERS THEN
                V_EXCEPTION_CODE := SQLCODE;
                V_EXCEPTION_MSG  := SUBSTR(SQLERRM, 1, 100);
                V_RESULT := 'FAILURE' || ' - ' || V_EXCEPTION_CODE || ' - ' || V_EXCEPTION_MSG;
                DBMS_OUTPUT.PUT_LINE('ISSUE IN ENERGY SALE CONFIRMATION-'||V_RESULT);

 END;
 <<THE_END>>
IF V_RESULT = 'SUCCESS' THEN
  COMMIT;
ELSE
  v_result := v_result || ' - ' || v_reason;
END IF;
RETURN V_RESULT;
END ENERGY_SALE_CONFIRMATION;

/
--------------------------------------------------------
--  DDL for Function LOSS_CALCULATION
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "OPENACCESS"."LOSS_CALCULATION" 
(INJECTION_CODE IN VARCHAR2,
DRAWAL_CODE IN  VARCHAR2,
INJECTED_UNITS IN VARCHAR2,
TRANS_LOSS OUT NUMBER,DIST_LOSS OUT NUMBER,
TOTAL_LOSS OUT NUMBER,DRAWAL_UNITS OUT NUMBER)
RETURN VARCHAR2
IS
    V_LOSS_CALCULATION M_LOSS_CALC_CHART%ROWTYPE;
    V_REASON VARCHAR2(200); 
    V_RESULT VARCHAR(300):='SUCCESS'; 
    V_EXCEPTION_CODE VARCHAR2(150);
    V_EXCEPTION_MSG  VARCHAR2(150);  

BEGIN  
   BEGIN
-- DBMS_OUTPUT.PUT_LINE('INJECTION_CODE'||INJECTION_CODE);
--  DBMS_OUTPUT.PUT_LINE('DRAWAL_CODE'||DRAWAL_CODE);
        SELECT * INTO V_LOSS_CALCULATION FROM M_LOSS_CALC_CHART WHERE INJECTION_VOLTAGE_CODE=INJECTION_CODE AND DRAWAL_VOLTAGE_CODE=DRAWAL_CODE ;
-- DBMS_OUTPUT.PUT_LINE('TRANS_LOSS'||V_LOSS_CALCULATION.TRANS_LOSS_PERCENT);
-- DBMS_OUTPUT.PUT_LINE('DIST_LOSS'||V_LOSS_CALCULATION.DIST_LOSS_PERCENT);
--  DBMS_OUTPUT.PUT_LINE('INJECTED_UNITS'||INJECTED_UNITS);

--          DBMS_OUTPUT.PUT_LINE('DISTLOSS'||V_LOSS_CALCULATION.DIST_LOSS_PERCENT*INJECTED_UNITS);
--           DBMS_OUTPUT.PUT_LINE('INJECTED_UNITS'||INJECTED_UNITS);
        TRANS_LOSS := V_LOSS_CALCULATION.TRANS_LOSS_PERCENT*INJECTED_UNITS;
        TRANS_LOSS :=TO_BINARY_FLOAT(TRANS_LOSS)/100;
--         DBMS_OUTPUT.PUT_LINE('TRANS_LOSS'||TRANS_LOSS);
          DIST_LOSS := V_LOSS_CALCULATION.DIST_LOSS_PERCENT*INJECTED_UNITS;
        DIST_LOSS :=TO_BINARY_FLOAT(DIST_LOSS)/100;
--         DBMS_OUTPUT.PUT_LINE('DISTLOSS'||DIST_LOSS);

        TOTAL_LOSS :=TRANS_LOSS+DIST_LOSS;
        DRAWAL_UNITS := INJECTED_UNITS- TOTAL_LOSS;
--         DBMS_OUTPUT.PUT_LINE('DRAWAL_UNITS'||DRAWAL_UNITS);

--               DBMS_OUTPUT.PUT_LINE('TOTAL_LOSS'||TOTAL_LOSS);

      EXCEPTION
              WHEN OTHERS THEN
                V_EXCEPTION_CODE := SQLCODE;
                V_EXCEPTION_MSG  := SUBSTR(SQLERRM, 1, 100);
                V_RESULT := 'FAILURE' || ' - ' || V_EXCEPTION_CODE || ' - ' || V_EXCEPTION_MSG;
                DBMS_OUTPUT.PUT_LINE('ISSUE IN CREATE_STB-'||V_RESULT);

 END;
 <<THE_END>>
IF V_RESULT = 'SUCCESS' THEN
  COMMIT;
ELSE
  v_result := v_result || ' - ' || v_reason;
END IF;
RETURN TOTAL_LOSS;
--RETURN DISTLOSS;
--RETURN TOTAL_LOSS;
END ;


/
-- Unable to render SYNONYM DDL for object PUBLIC.DBMS_OUTPUT with DBMS_METADATA attempting internal generator.
CREATE PUBLIC SYNONYM DBMS_OUTPUT FOR SYS.DBMS_OUTPUT
-- Unable to render SYNONYM DDL for object PUBLIC.DUAL with DBMS_METADATA attempting internal generator.
CREATE PUBLIC SYNONYM DUAL FOR SYS."DUAL"
